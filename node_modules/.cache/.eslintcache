[{"/home/intern/simmax/hooks/src/index.js":"1","/home/intern/simmax/hooks/src/App.js":"2","/home/intern/simmax/hooks/src/reportWebVitals.js":"3","/home/intern/simmax/hooks/src/NewTaskForm.js":"4","/home/intern/simmax/hooks/src/task-service/api-service.js":"5","/home/intern/simmax/hooks/src/components/Tasks.js":"6","/home/intern/simmax/hooks/src/components/TodayTasks.js":"7","/home/intern/simmax/hooks/src/components/Dashboard.js":"8","/home/intern/simmax/hooks/src/components/NotDone.js":"9","/home/intern/simmax/hooks/src/components/Task.js":"10","/home/intern/simmax/hooks/src/store/dashboard/reducer.js":"11","/home/intern/simmax/hooks/src/store/dashboard/actions.js":"12","/home/intern/simmax/hooks/src/store/index.js":"13","/home/intern/simmax/hooks/src/store/tasks/reducer.js":"14","/home/intern/simmax/hooks/src/store/tasks/actions.js":"15"},{"size":624,"mtime":1620802639965,"results":"16","hashOfConfig":"17"},{"size":1445,"mtime":1620809564395,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1619685855053,"results":"19","hashOfConfig":"17"},{"size":1297,"mtime":1620218685562,"results":"20","hashOfConfig":"17"},{"size":768,"mtime":1620308825559,"results":"21","hashOfConfig":"17"},{"size":1250,"mtime":1620820044918,"results":"22","hashOfConfig":"17"},{"size":1662,"mtime":1620395327177,"results":"23","hashOfConfig":"17"},{"size":1139,"mtime":1620809696648,"results":"24","hashOfConfig":"17"},{"size":1102,"mtime":1620395148264,"results":"25","hashOfConfig":"17"},{"size":874,"mtime":1620820024766,"results":"26","hashOfConfig":"17"},{"size":255,"mtime":1620809964809,"results":"27","hashOfConfig":"17"},{"size":316,"mtime":1620809854432,"results":"28","hashOfConfig":"17"},{"size":531,"mtime":1620810108745,"results":"29","hashOfConfig":"17"},{"size":588,"mtime":1620820522797,"results":"30","hashOfConfig":"17"},{"size":1465,"mtime":1620819358790,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1bfgjgl",{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/intern/simmax/hooks/src/index.js",[],["66","67"],"/home/intern/simmax/hooks/src/App.js",["68","69","70","71"],"import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Tasks from \"./components/Tasks\";\nimport { useEffect } from \"react\";\nimport Dashboard from \"./components/Dashboard\";\nimport { Route } from \"react-router\";\nimport TodayTasks from \"./components/TodayTasks\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport NotDone from \"./components/NotDone\";\nimport { loadDashboard } from \"./store/dashboard/actions\";\nimport { useDispatch,useSelector } from \"react-redux\";\nimport {loadTasks} from './store/tasks/actions'\n\nconst url = \"http://localhost:5000/api/\";\nfunction App() {\n  const [taskLists, setTaskLists] = useState([]);\n  const [list, setSelectedList] = useState();\n\n  useEffect(() => {\n    fetch(url + `tasklist/`)\n      .then((response) => response.json())\n      .then(function (lists) {\n        setTaskLists(lists);\n        setSelectedList(lists[0]);\n      });\n  }, []);\n  \n\n\n\n  return (\n    <div id=\"tasks\">\n\n      <BrowserRouter>\n        <div className=\"todoListSidebar\">\n          <Dashboard lists={taskLists} selectedList={setSelectedList} />\n        </div>\n\n        <Route path={\"/todo-list/:id\"}>\n          <Tasks list={list} lists={taskLists} />\n        </Route>\n        <Route path=\"/today\">\n          <TodayTasks lists={taskLists} />\n        </Route>\n        <Route path=\"/not-done\">\n          <NotDone list={list} lists={taskLists} />\n        </Route>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","/home/intern/simmax/hooks/src/reportWebVitals.js",[],"/home/intern/simmax/hooks/src/NewTaskForm.js",[],"/home/intern/simmax/hooks/src/task-service/api-service.js",[],"/home/intern/simmax/hooks/src/components/Tasks.js",["72","73","74"],"/home/intern/simmax/hooks/src/components/TodayTasks.js",[],"/home/intern/simmax/hooks/src/components/Dashboard.js",["75"],"import React from 'react'\nimport { NavLink } from 'react-router-dom';\nimport '../styles/sidebar.css';\nimport {useEffect} from 'react';\nimport { loadDashboard } from \"../store/dashboard/actions\";\nimport { useDispatch,useSelector } from \"react-redux\";\nexport default function Dashboard({selectedList}) {\n    const dispatch = useDispatch();\n    useEffect(() => {\n      dispatch(loadDashboard())\n    },[])\n    \n    const dash = useSelector(state=>state.lists) \n\n\n    return (\n        <ul>\n            <div id='list-sidebar'>\n            <h2>Lists</h2>\n            <ul>\n            <li><NavLink to={`/today`} activeClassName=\"active-link\" className='link'>today</NavLink></li>\n            <li><NavLink to={`/not-done`} activeClassName=\"active-link\" className='link'>Not Finished Tasks</NavLink></li>\n            </ul>\n            <div>\n            { \n                dash.map((l) => \n                    <NavLink to={`/todo-list/${l.id}`} onClick={()=>selectedList(l)} key={l.id} activeClassName=\"active-link\" className='link'>{l.title} </NavLink>\n                )\n            }\n            </div>\n        </div>        \n        </ul>\n    )\n}\n","/home/intern/simmax/hooks/src/components/NotDone.js",["76"],"import React from 'react';\nimport {useState} from 'react';\nimport { useEffect } from 'react';\nimport Task from './Task';\nimport  { deleteTask,patchTask,createTask } from '../task-service/api-service';\n\n\nexport default function NotDone(props) {\n    let [tasks,setTasks] = useState([]);\n    useEffect(()=>fetch('http://localhost:5000/api/tasktodo')\n    .then(response=>response.json())\n    .then(ts => setTasks(ts.filter((t=>(t.done ===false)&&(t.dueDate)))\n    .filter(t=>new Date(t.dueDate)<=new Date())))\n    ,[]);\n    const removeTask = (t) => {\n        deleteTask(t).then(setTasks(tasks.filter((task) => t.id !== task.id)));\n      };\n    \n      const updateDone = (t) => {\n        patchTask(t).then((ts) => setTasks(tasks.filter(task=>task !== t)));\n      };\n    \n     \n    return (\n        <div id=\"task-list\">\n            \n           {tasks.map((t, i) => (\n        <Task\n          key={i}\n          task={t}\n          getRemoveTask={removeTask}\n          updateDone={updateDone}\n          lists={props.lists}\n          showListTitle={true}\n        />\n        \n      ))}\n            </div>\n    )\n}\n","/home/intern/simmax/hooks/src/components/Task.js",[],"/home/intern/simmax/hooks/src/store/dashboard/reducer.js",[],"/home/intern/simmax/hooks/src/store/dashboard/actions.js",[],"/home/intern/simmax/hooks/src/store/index.js",[],"/home/intern/simmax/hooks/src/store/tasks/reducer.js",["77"],"/home/intern/simmax/hooks/src/store/tasks/actions.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":10,"column":10,"nodeType":"84","messageId":"85","endLine":10,"endColumn":23},{"ruleId":"82","severity":1,"message":"86","line":11,"column":10,"nodeType":"84","messageId":"85","endLine":11,"endColumn":21},{"ruleId":"82","severity":1,"message":"87","line":11,"column":22,"nodeType":"84","messageId":"85","endLine":11,"endColumn":33},{"ruleId":"82","severity":1,"message":"88","line":12,"column":9,"nodeType":"84","messageId":"85","endLine":12,"endColumn":18},{"ruleId":"82","severity":1,"message":"89","line":4,"column":10,"nodeType":"84","messageId":"85","endLine":4,"endColumn":18},{"ruleId":"82","severity":1,"message":"90","line":10,"column":7,"nodeType":"84","messageId":"85","endLine":10,"endColumn":10},{"ruleId":"91","severity":1,"message":"92","line":18,"column":6,"nodeType":"93","endLine":18,"endColumn":10,"suggestions":"94"},{"ruleId":"91","severity":1,"message":"92","line":11,"column":7,"nodeType":"93","endLine":11,"endColumn":9,"suggestions":"95"},{"ruleId":"82","severity":1,"message":"96","line":5,"column":32,"nodeType":"84","messageId":"85","endLine":5,"endColumn":42},{"ruleId":"82","severity":1,"message":"97","line":1,"column":10,"nodeType":"84","messageId":"85","endLine":1,"endColumn":13},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'loadDashboard' is defined but never used.","Identifier","unusedVar","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'loadTasks' is defined but never used.","'useState' is defined but never used.","'url' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["100"],["101"],"'createTask' is defined but never used.","'act' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},"Update the dependencies array to be: [dispatch, id]",{"range":"106","text":"107"},"Update the dependencies array to be: [dispatch]",{"range":"108","text":"109"},[575,579],"[dispatch, id]",[398,400],"[dispatch]"]