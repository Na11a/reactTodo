{"ast":null,"code":"var _jsxFileName = \"/home/intern/simmax/hooks/src/Task.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './styles/Task.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nim;\nexport default function Task({\n  task,\n  getRemoveTask,\n  updateDone,\n  listShow\n}) {\n  _s();\n\n  const deadline = task.dueDate === null ? '' : task.dueDate.toLocaleString().slice(0, 10);\n\n  const doneChange = () => {\n    task.done = task.done ? false : true;\n    updateDone(task);\n  };\n\n  const [listsDTO, setListDTO] = useState(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-block\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: task.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"description\",\n      children: task.desc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: task.done,\n      onChange: doneChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: deadline\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => getRemoveTask(task),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: listShow ? task.taskListId : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Task, \"LxB3tzmFTgF3xvY8VqIAyFs0qlA=\");\n\n_c = Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["/home/intern/simmax/hooks/src/Task.js"],"names":["React","im","Task","task","getRemoveTask","updateDone","listShow","deadline","dueDate","toLocaleString","slice","doneChange","done","listsDTO","setListDTO","useState","title","desc","taskListId"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;;AACAC,EAAE;AAEF,eAAe,SAASC,IAAT,CAAc;AAACC,EAAAA,IAAD;AAAMC,EAAAA,aAAN;AAAoBC,EAAAA,UAApB;AAA+BC,EAAAA;AAA/B,CAAd,EAAwD;AAAA;;AACnE,QAAMC,QAAQ,GAAGJ,IAAI,CAACK,OAAL,KAAiB,IAAjB,GAAwB,EAAxB,GAA4BL,IAAI,CAACK,OAAL,CAAaC,cAAb,GAA8BC,KAA9B,CAAoC,CAApC,EAAsC,EAAtC,CAA7C;;AACA,QAAMC,UAAU,GAAG,MAAK;AACxBR,IAAAA,IAAI,CAACS,IAAL,GAAYT,IAAI,CAACS,IAAL,GAAY,KAAZ,GAAoB,IAAhC;AACAP,IAAAA,UAAU,CAACF,IAAD,CAAV;AAAiB,GAFjB;;AAIA,QAAM,CAACU,QAAD,EAAWC,UAAX,IAAyBC,QAAQ,CAAC,IAAD,CAAvC;AAEA,sBACI;AAAK,IAAA,SAAS,EAAE,YAAhB;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA,gBAAuBZ,IAAI,CAACa;AAA5B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBAA8Bb,IAAI,CAACc;AAAnC;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,OAAO,EAAEd,IAAI,CAACS,IAArC;AAA2C,MAAA,QAAQ,EAAED;AAArD;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA,gBAAMJ;AAAN;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAQ,MAAA,OAAO,EAAE,MAAMH,aAAa,CAACD,IAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAA,gBAAMG,QAAQ,GAAGH,IAAI,CAACe,UAAR,GAAoB;AAAlC;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GAlBuBhB,I;;KAAAA,I","sourcesContent":["import React from 'react'\nimport './styles/Task.css';\nim\n\nexport default function Task({task,getRemoveTask,updateDone,listShow}) {\n    const deadline = task.dueDate === null ? '' :task.dueDate.toLocaleString().slice(0,10)\n    const doneChange = () =>{\n    task.done = task.done ? false : true;\n    updateDone(task)}\n    \n    const [listsDTO, setListDTO] = useState(null);\n\n    return (\n        <div className =\"task-block\">\n            <h1 className=\"title\">{task.title}</h1>\n            <div className=\"description\">{task.desc}</div>\n            <input type=\"checkbox\" checked={task.done} onChange={doneChange}/>\n            <div>{deadline}</div>\n            <button onClick={() => getRemoveTask(task)}>Delete</button>\n            <div>{listShow ? task.taskListId :''}</div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}