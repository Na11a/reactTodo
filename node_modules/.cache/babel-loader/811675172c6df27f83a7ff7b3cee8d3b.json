{"ast":null,"code":"var _jsxFileName = \"/home/intern/simmax/hooks/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport NewTaskForm from \"./NewTaskForm\";\nimport Tasks from \"./Tasks\";\nimport { useEffect } from 'react';\nimport TodoListSidebar from \"./TodoListSidebar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst lists = [{\n  id: 1,\n  title: 'today'\n}, {\n  id: 2,\n  title: 'not-today'\n}];\nconst url = 'http://localhost:5000/api/';\n\nfunction App() {\n  _s();\n\n  let [tasks, setTasks] = useState([{\n    id: 1,\n    title: \"First\",\n    desc: \"first desc\",\n    done: true,\n    dueDate: new Date(\"2020-12-12\"),\n    taskListId: 1\n  }, {\n    id: 2,\n    title: \"Second\",\n    desc: \"first desc\",\n    done: true,\n    dueDate: new Date(\"2011-11-11\"),\n    taskListId: 2\n  }]);\n  let [list, setList] = useState(lists[0]);\n\n  const removeTask = t => {\n    setTasks(tasks.filter(task => t.id !== task.id));\n  };\n\n  const addTask = task => {\n    let index = 1;\n\n    if (tasks.length !== 0) {\n      index = tasks[tasks.length - 1].id + 1;\n    }\n\n    setTasks([...tasks, { ...task,\n      taskListId: list.id,\n      id: index\n    }]);\n  };\n\n  useEffect(() => {\n    fetch(url + 'tasktodo/').then(response => response.json()).then(ts => setTasks(tasks.concat(ts)));\n  }, []);\n  useEffect(() => {\n    fetch(url + 'tasklist/').then(response => response.json()).then(ls => lists.concat(s));\n  }, []);\n  let taskList = tasks.filter(t => t.taskListId === list.id);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"tasks\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"use-list\",\n      children: /*#__PURE__*/_jsxDEV(TodoListSidebar, {\n        lists: lists,\n        selectedList: list,\n        onSelect: setList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"use-task\",\n      children: [/*#__PURE__*/_jsxDEV(Tasks, {\n        tasks: taskList,\n        getTask: removeTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NewTaskForm, {\n        onSubmit: addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"fn1XaQBcCjQw9NgMEGApwr4VP/s=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/intern/simmax/hooks/src/App.js"],"names":["React","useState","NewTaskForm","Tasks","useEffect","TodoListSidebar","lists","id","title","url","App","tasks","setTasks","desc","done","dueDate","Date","taskListId","list","setList","removeTask","t","filter","task","addTask","index","length","fetch","then","response","json","ts","concat","ls","s","taskList"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport NewTaskForm from \"./NewTaskForm\";\nimport Tasks from \"./Tasks\";\nimport {useEffect} from 'react'\nimport TodoListSidebar from \"./TodoListSidebar\";\nconst lists = [{id:1,title:'today'},{id:2,title:'not-today'}]\nconst url = 'http://localhost:5000/api/'\nfunction App() {\n  let [tasks, setTasks] = useState([\n    {\n      id: 1,\n      title: \"First\",\n      desc: \"first desc\",\n      done: true,\n      dueDate: new Date(\"2020-12-12\"),\n      taskListId: 1,\n    },\n    {\n      id: 2,\n      title: \"Second\",\n      desc: \"first desc\",\n      done: true,\n      dueDate: new Date(\"2011-11-11\"),\n      taskListId: 2,\n    },\n  ]);\n  let [list,setList] = useState(lists[0])\n\n  const removeTask = (t) =>{\n      setTasks(tasks.filter(task=>t.id !==task.id))}\n\n  const addTask = (task) => {\n    let index = 1\n    if (tasks.length !==0){ \n      index = tasks[tasks.length -1].id + 1\n      }\n  setTasks([...tasks, {...task,taskListId:list.id,id:index}])\n  };\n\n\n  useEffect(() =>{\n    fetch(url+'tasktodo/').then(response=>response.json())\n              .then(ts=>setTasks(tasks.concat(ts))\n              )\n  }\n  ,[]) \n  useEffect(() =>{\n    fetch(url+'tasklist/').then(response=>response.json())\n              .then(ls=>lists.concat(s)\n              )\n  }\n  ,[])  \n\n  let taskList = tasks.filter(t=>t.taskListId ===list.id)\n\n  return (\n    <div id=\"tasks\">\n      <div className=\"use-list\">\n        <TodoListSidebar lists={lists} selectedList={list} onSelect={setList} />\n      </div>\n      <div className=\"use-task\">\n        <Tasks tasks={taskList} getTask={removeTask}/>\n        <NewTaskForm onSubmit={addTask} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}