{"ast":null,"code":"var _jsxFileName = \"/home/intern/simmax/hooks/src/Tasks.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Task from \"./Task\";\nimport \"./styles/Tasks.css\";\nimport { useState, useEffect } from \"react\";\nimport NewTaskForm from \"./NewTaskForm\";\nimport { useParams } from \"react-router\";\nimport { deleteTask, patchTask, createTask } from \"./task-service/api-service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = \"http://localhost:5000/api/\";\nexport default function Tasks(props) {\n  _s();\n\n  let lists = props.lists;\n  let {\n    id\n  } = useParams();\n  useEffect(() => {\n    fetch(url + `tasklist/${id}/tasks`).then(response => response.json()).then(ts => setTasks([ts]));\n  }, [id]);\n\n  const removeTask = t => {\n    deleteTask(t).then(setTasks(tasks.filter(task => t.id !== task.id)));\n  };\n\n  const updateDone = t => {\n    patchTask(t).then(() => setTasks([...tasks]));\n  };\n\n  const addTask = task => {\n    createTask(task, props.list).then(task => setTasks([...tasks, task]));\n  };\n\n  console.log(tasks);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"task-list\",\n    children: [tasks.map((t, i) => /*#__PURE__*/_jsxDEV(Task, {\n      task: t,\n      getRemoveTask: removeTask,\n      updateDone: updateDone,\n      lists: lists\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(NewTaskForm, {\n      onSubmit: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Tasks, \"XT1vicrm+NSYLQxrGm9hA77HN9Y=\", false, function () {\n  return [useParams];\n});\n\n_c = Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["/home/intern/simmax/hooks/src/Tasks.js"],"names":["React","Task","useState","useEffect","NewTaskForm","useParams","deleteTask","patchTask","createTask","url","Tasks","props","lists","id","fetch","then","response","json","ts","setTasks","removeTask","t","tasks","filter","task","updateDone","addTask","list","console","log","map","i"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,oBAAP;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,SAAT,QAA0B,cAA1B;AAEA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,UAAhC,QAAkD,4BAAlD;;AACA,MAAMC,GAAG,GAAG,4BAAZ;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AACnC,MAAIC,KAAK,GAAGD,KAAK,CAACC,KAAlB;AACA,MAAI;AAAEC,IAAAA;AAAF,MAASR,SAAS,EAAtB;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,KAAK,CAACL,GAAG,GAAI,YAAWI,EAAG,QAAtB,CAAL,CACGE,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAEQG,EAAE,IAAGC,QAAQ,CAAC,CAACD,EAAD,CAAD,CAFrB;AAGD,GAJQ,EAIN,CAACL,EAAD,CAJM,CAAT;;AAOA,QAAMO,UAAU,GAAIC,CAAD,IAAO;AACxBf,IAAAA,UAAU,CAACe,CAAD,CAAV,CAAcN,IAAd,CAAmBI,QAAQ,CAACG,KAAK,CAACC,MAAN,CAAcC,IAAD,IAAUH,CAAC,CAACR,EAAF,KAASW,IAAI,CAACX,EAArC,CAAD,CAA3B;AACD,GAFD;;AAIA,QAAMY,UAAU,GAAIJ,CAAD,IAAO;AACxBd,IAAAA,SAAS,CAACc,CAAD,CAAT,CAAaN,IAAb,CAAkB,MAAMI,QAAQ,CAAC,CAAC,GAAGG,KAAJ,CAAD,CAAhC;AACD,GAFD;;AAIA,QAAMI,OAAO,GAAIF,IAAD,IAAU;AACxBhB,IAAAA,UAAU,CAACgB,IAAD,EAAOb,KAAK,CAACgB,IAAb,CAAV,CAA6BZ,IAA7B,CAAmCS,IAAD,IAAUL,QAAQ,CAAC,CAAC,GAAGG,KAAJ,EAAWE,IAAX,CAAD,CAApD;AACD,GAFD;;AAGAI,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACA,sBACE;AAAK,IAAA,EAAE,EAAC,WAAR;AAAA,eACGA,KAAK,CAACQ,GAAN,CAAU,CAACT,CAAD,EAAIU,CAAJ,kBACT,QAAC,IAAD;AAEE,MAAA,IAAI,EAAEV,CAFR;AAGE,MAAA,aAAa,EAAED,UAHjB;AAIE,MAAA,UAAU,EAAEK,UAJd;AAKE,MAAA,KAAK,EAAEb;AALT,OACOmB,CADP;AAAA;AAAA;AAAA;AAAA,YADD,CADH,eAUE,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAEL;AAAvB;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GArCuBhB,K;UAETL,S;;;KAFSK,K","sourcesContent":["import React from \"react\";\nimport Task from \"./Task\";\nimport \"./styles/Tasks.css\";\nimport { useState, useEffect } from \"react\";\nimport NewTaskForm from \"./NewTaskForm\";\nimport { useParams } from \"react-router\";\n\nimport { deleteTask, patchTask, createTask } from \"./task-service/api-service\";\nconst url = \"http://localhost:5000/api/\";\n\nexport default function Tasks(props) {\n  let lists = props.lists\n  let { id } = useParams();\n\n  useEffect(() => {\n    fetch(url + `tasklist/${id}/tasks`)\n      .then((response) => response.json())\n      .then(ts =>setTasks([ts]));\n  }, [id]);\n\n\n  const removeTask = (t) => {\n    deleteTask(t).then(setTasks(tasks.filter((task) => t.id !== task.id)));\n  };\n\n  const updateDone = (t) => {\n    patchTask(t).then(() => setTasks([...tasks]));\n  };\n\n  const addTask = (task) => {\n    createTask(task, props.list).then((task) => setTasks([...tasks, task]));\n  };\n  console.log(tasks)\n  return (\n    <div id=\"task-list\">\n      {tasks.map((t, i) => (\n        <Task\n          key={i}\n          task={t}\n          getRemoveTask={removeTask}\n          updateDone={updateDone}\n          lists={lists}\n        />\n      ))}\n      <NewTaskForm onSubmit={addTask} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}