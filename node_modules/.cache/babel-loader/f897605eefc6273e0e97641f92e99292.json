{"ast":null,"code":"var _jsxFileName = \"/home/intern/simmax/hooks/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Tasks from \"./components/Tasks\";\nimport { useEffect } from \"react\";\nimport Dashboard from \"./components/Dashboard\";\nimport { Route } from \"react-router\";\nimport TodayTasks from \"./components/TodayTasks\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport NotDone from \"./components/NotDone\";\nimport { loadDashboard } from \"./store/dashboard/action\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = \"http://localhost:5000/api/\";\n\nfunction App() {\n  _s();\n\n  // const [taskLists, setTaskLists] = useState([]);\n  // const [list, setSelectedList] = useState();\n  // useEffect(() => {\n  //   fetch(url + `tasklist/`)\n  //     .then((response) => response.json())\n  //     .then(function (lists) {\n  //       setTaskLists(lists);\n  //       setSelectedList(lists[0]);\n  //     });\n  // }, []);\n  // const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadDashboard());\n  }, [dispatch]);\n  const state = useSelector(state => state.dashboard);\n  console.log(state);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"tasks\",\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todoListSidebar\",\n        children: /*#__PURE__*/_jsxDEV(Dashboard, {\n          lists: taskLists,\n          selectedList: setSelectedList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/todo-list/:id\",\n        children: /*#__PURE__*/_jsxDEV(Tasks, {\n          list: list,\n          lists: taskLists\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/today\",\n        children: /*#__PURE__*/_jsxDEV(TodayTasks, {\n          lists: taskLists\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/not-done\",\n        children: /*#__PURE__*/_jsxDEV(NotDone, {\n          list: list,\n          lists: taskLists\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"oL760ejd5j6q3elOeFAyq+YJaTU=\", false, function () {\n  return [useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/intern/simmax/hooks/src/App.js"],"names":["React","useState","Tasks","useEffect","Dashboard","Route","TodayTasks","BrowserRouter","NotDone","loadDashboard","useDispatch","useSelector","url","App","dispatch","state","dashboard","console","log","taskLists","setSelectedList","list"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;AAEA,MAAMC,GAAG,GAAG,4BAAZ;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,QAAQ,CAACL,aAAa,EAAd,CAAR;AACD,GAFQ,EAEN,CAACK,QAAD,CAFM,CAAT;AAIA,QAAMC,KAAK,GAAGJ,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACC,SAAlB,CAAzB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AAEA,sBAEE;AAAK,IAAA,EAAE,EAAC,OAAR;AAAA,2BAGE,QAAC,aAAD;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,+BACE,QAAC,SAAD;AAAW,UAAA,KAAK,EAAEI,SAAlB;AAA6B,UAAA,YAAY,EAAEC;AAA3C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAE,gBAAb;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAEC,IAAb;AAAmB,UAAA,KAAK,EAAEF;AAA1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALF,eAQE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,KAAK,EAAEA;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARF,eAWE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,WAAZ;AAAA,+BACE,QAAC,OAAD;AAAS,UAAA,IAAI,EAAEE,IAAf;AAAqB,UAAA,KAAK,EAAEF;AAA5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,UAFF;AAsBD;;GA3CQN,G;UAkBOF,W;;;KAlBPE,G;AA6CT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Tasks from \"./components/Tasks\";\nimport { useEffect } from \"react\";\nimport Dashboard from \"./components/Dashboard\";\nimport { Route } from \"react-router\";\nimport TodayTasks from \"./components/TodayTasks\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport NotDone from \"./components/NotDone\";\nimport { loadDashboard } from \"./store/dashboard/action\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst url = \"http://localhost:5000/api/\";\nfunction App() {\n  // const [taskLists, setTaskLists] = useState([]);\n  // const [list, setSelectedList] = useState();\n\n  // useEffect(() => {\n  //   fetch(url + `tasklist/`)\n  //     .then((response) => response.json())\n  //     .then(function (lists) {\n  //       setTaskLists(lists);\n  //       setSelectedList(lists[0]);\n  //     });\n  // }, []);\n  // const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadDashboard());\n  }, [dispatch]);\n\n  const state = useSelector((state) => state.dashboard);\n  console.log(state);\n  \n  return (\n    \n    <div id=\"tasks\">\n      {/* {console.log(store.getState())} */}\n\n      <BrowserRouter>\n        <div className=\"todoListSidebar\">\n          <Dashboard lists={taskLists} selectedList={setSelectedList} />\n        </div>\n\n        <Route path={\"/todo-list/:id\"}>\n          <Tasks list={list} lists={taskLists} />\n        </Route>\n        <Route path=\"/today\">\n          <TodayTasks lists={taskLists} />\n        </Route>\n        <Route path=\"/not-done\">\n          <NotDone list={list} lists={taskLists} />\n        </Route>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}