{"ast":null,"code":"var _jsxFileName = \"/home/intern/simmax/hooks/src/Tasks.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Task from \"./Task\";\nimport \"./styles/Tasks.css\";\nimport { useState, useEffect } from \"react\";\nimport NewTaskForm from \"./NewTaskForm\";\nimport { useParams } from \"react-router\";\nimport { deleteTask, patchTask, createTask } from \"./task-service/api-service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = \"http://localhost:5000/api/\";\nexport default function Tasks(props) {\n  _s();\n\n  let {\n    id\n  } = useParams();\n  useEffect(() => {\n    fetch(url + `tasklist/${id}/tasks`).then(response => response.json()).then(setTasks);\n  }, [id]);\n  const [tasks, setTasks] = useState([]);\n\n  const removeTask = t => {\n    deleteTask(t).then(setTasks(tasks.filter(task => t.id !== task.id)));\n  };\n\n  const updateDone = t => {\n    patchTask(t).then(() => setTasks([...tasks]));\n  };\n\n  const addTask = task => {\n    createTask(task, props.list).then(task => setTasks([...tasks, task]));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"task-list\",\n    children: [tasks.map((t, i) => /*#__PURE__*/_jsxDEV(Task, {\n      task: t,\n      getRemoveTask: removeTask,\n      updateDone: updateDone,\n      lists: props.lists\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(NewTaskForm, {\n      onSubmit: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Tasks, \"quPSGeBoGpdg3VuutGrl+oeTvxU=\", false, function () {\n  return [useParams];\n});\n\n_c = Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["/home/intern/simmax/hooks/src/Tasks.js"],"names":["React","Task","useState","useEffect","NewTaskForm","useParams","deleteTask","patchTask","createTask","url","Tasks","props","id","fetch","then","response","json","setTasks","tasks","removeTask","t","filter","task","updateDone","addTask","list","map","i","lists"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,oBAAP;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,SAAT,QAA0B,cAA1B;AAEA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,UAAhC,QAAkD,4BAAlD;;AACA,MAAMC,GAAG,GAAG,4BAAZ;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AACnC,MAAI;AAAEC,IAAAA;AAAF,MAASP,SAAS,EAAtB;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,KAAK,CAACJ,GAAG,GAAI,YAAWG,EAAG,QAAtB,CAAL,CACGE,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAEQG,QAFR;AAGD,GAJQ,EAIN,CAACL,EAAD,CAJM,CAAT;AAKA,QAAM,CAACM,KAAD,EAAQD,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMiB,UAAU,GAAIC,CAAD,IAAO;AACxBd,IAAAA,UAAU,CAACc,CAAD,CAAV,CAAcN,IAAd,CAAmBG,QAAQ,CAACC,KAAK,CAACG,MAAN,CAAcC,IAAD,IAAUF,CAAC,CAACR,EAAF,KAASU,IAAI,CAACV,EAArC,CAAD,CAA3B;AACD,GAFD;;AAIA,QAAMW,UAAU,GAAIH,CAAD,IAAO;AACxBb,IAAAA,SAAS,CAACa,CAAD,CAAT,CAAaN,IAAb,CAAkB,MAAMG,QAAQ,CAAC,CAAC,GAAGC,KAAJ,CAAD,CAAhC;AACD,GAFD;;AAIA,QAAMM,OAAO,GAAIF,IAAD,IAAU;AACxBd,IAAAA,UAAU,CAACc,IAAD,EAAOX,KAAK,CAACc,IAAb,CAAV,CAA6BX,IAA7B,CAAmCQ,IAAD,IAAUL,QAAQ,CAAC,CAAC,GAAGC,KAAJ,EAAWI,IAAX,CAAD,CAApD;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,EAAE,EAAC,WAAR;AAAA,eACGJ,KAAK,CAACQ,GAAN,CAAU,CAACN,CAAD,EAAIO,CAAJ,kBACT,QAAC,IAAD;AAEE,MAAA,IAAI,EAAEP,CAFR;AAGE,MAAA,aAAa,EAAED,UAHjB;AAIE,MAAA,UAAU,EAAEI,UAJd;AAKE,MAAA,KAAK,EAAEZ,KAAK,CAACiB;AALf,OACOD,CADP;AAAA;AAAA;AAAA;AAAA,YADD,CADH,eAUE,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAEH;AAAvB;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GApCuBd,K;UACTL,S;;;KADSK,K","sourcesContent":["import React from \"react\";\nimport Task from \"./Task\";\nimport \"./styles/Tasks.css\";\nimport { useState, useEffect } from \"react\";\nimport NewTaskForm from \"./NewTaskForm\";\nimport { useParams } from \"react-router\";\n\nimport { deleteTask, patchTask, createTask } from \"./task-service/api-service\";\nconst url = \"http://localhost:5000/api/\";\n\nexport default function Tasks(props) {\n  let { id } = useParams();\n\n  useEffect(() => {\n    fetch(url + `tasklist/${id}/tasks`)\n      .then((response) => response.json())\n      .then(setTasks);\n  }, [id]);\n  const [tasks, setTasks] = useState([]);\n\n  const removeTask = (t) => {\n    deleteTask(t).then(setTasks(tasks.filter((task) => t.id !== task.id)));\n  };\n\n  const updateDone = (t) => {\n    patchTask(t).then(() => setTasks([...tasks]));\n  };\n\n  const addTask = (task) => {\n    createTask(task, props.list).then((task) => setTasks([...tasks, task]));\n  };\n\n  return (\n    <div id=\"task-list\">\n      {tasks.map((t, i) => (\n        <Task\n          key={i}\n          task={t}\n          getRemoveTask={removeTask}\n          updateDone={updateDone}\n          lists={props.lists}\n        />\n      ))}\n      <NewTaskForm onSubmit={addTask} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}