{"ast":null,"code":"var _jsxFileName = \"/home/intern/simmax/hooks/src/Task.js\";\nimport React from \"react\";\nimport \"./styles/Task.css\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = \"http://localhost:5000/api/\";\nexport default function Task({\n  task,\n  getRemoveTask,\n  updateDone,\n  listInfo\n}) {\n  const deadline = task.dueDate === null ? \"\" : task.dueDate.toLocaleString().slice(0, 10);\n\n  const doneChange = () => {\n    task.done = task.done ? false : true;\n    updateDone(task);\n  };\n\n  if (listInfo !== undefined && task.taskListId) {\n    task = { ...task,\n      listTitle: listInfo['taskListDTOs'][task.taskListId - 1].title\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-block\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: task.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"description\",\n      children: task.desc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: task.done,\n      onChange: doneChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: deadline\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => getRemoveTask(task),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), task.taskListId && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" List id =\", task.taskListId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_c = Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["/home/intern/simmax/hooks/src/Task.js"],"names":["React","useState","useEffect","url","Task","task","getRemoveTask","updateDone","listInfo","deadline","dueDate","toLocaleString","slice","doneChange","done","undefined","taskListId","listTitle","title","desc"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;AACA,SAASC,QAAT,EAAkBC,SAAlB,QAAmC,OAAnC;;AACA,MAAMC,GAAG,GAAG,4BAAZ;AAEA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,aAAR;AAAuBC,EAAAA,UAAvB;AAAmCC,EAAAA;AAAnC,CAAd,EAA6D;AAC1E,QAAMC,QAAQ,GACZJ,IAAI,CAACK,OAAL,KAAiB,IAAjB,GAAwB,EAAxB,GAA6BL,IAAI,CAACK,OAAL,CAAaC,cAAb,GAA8BC,KAA9B,CAAoC,CAApC,EAAuC,EAAvC,CAD/B;;AAEA,QAAMC,UAAU,GAAG,MAAM;AACvBR,IAAAA,IAAI,CAACS,IAAL,GAAYT,IAAI,CAACS,IAAL,GAAY,KAAZ,GAAoB,IAAhC;AACAP,IAAAA,UAAU,CAACF,IAAD,CAAV;AACD,GAHD;;AAIA,MAAKG,QAAQ,KAAKO,SAAd,IAA4BV,IAAI,CAACW,UAArC,EAAiD;AAC7CX,IAAAA,IAAI,GAAG,EAAC,GAAGA,IAAJ;AAASY,MAAAA,SAAS,EAACT,QAAQ,CAAC,cAAD,CAAR,CAAyBH,IAAI,CAACW,UAAL,GAAiB,CAA1C,EAA6CE;AAAhE,KAAP;AACH;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA,gBAAuBb,IAAI,CAACa;AAA5B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBAA8Bb,IAAI,CAACc;AAAnC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,OAAO,EAAEd,IAAI,CAACS,IAArC;AAA2C,MAAA,QAAQ,EAAED;AAArD;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,gBAAMJ;AAAN;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAQ,MAAA,OAAO,EAAE,MAAMH,aAAa,CAACD,IAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,EAMKA,IAAI,CAACW,UAAL,iBAAmB;AAAA,+BAAcX,IAAI,CAACW,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YANxB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;KArBuBZ,I","sourcesContent":["import React from \"react\";\nimport \"./styles/Task.css\";\nimport { useState,useEffect } from \"react\";\nconst url = \"http://localhost:5000/api/\";\n\nexport default function Task({ task, getRemoveTask, updateDone, listInfo }) {\n  const deadline =\n    task.dueDate === null ? \"\" : task.dueDate.toLocaleString().slice(0, 10);\n  const doneChange = () => {\n    task.done = task.done ? false : true;\n    updateDone(task);\n  };\n  if ((listInfo !== undefined) &&(task.taskListId)){\n      task = {...task,listTitle:listInfo['taskListDTOs'][task.taskListId -1].title}\n  }\n    \n  return (\n    <div className=\"task-block\">\n      <h1 className=\"title\">{task.title}</h1>\n      <div className=\"description\">{task.desc}</div>\n      <input type=\"checkbox\" checked={task.done} onChange={doneChange} />\n      <div>{deadline}</div>\n      <button onClick={() => getRemoveTask(task)}>Delete</button>\n        {task.taskListId &&(<p> List id ={task.taskListId}</p>)}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}