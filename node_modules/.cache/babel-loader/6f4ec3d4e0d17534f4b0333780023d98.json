{"ast":null,"code":"var _jsxFileName = \"/home/intern/simmax/hooks/src/NotDone.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport Task from './Task';\nimport { deleteTask, patchTask, createTask } from './task-service/api-service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NotDone(props) {\n  _s();\n\n  let [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:5000/api/tasktodo').then(response => response.json()).then(ts => setTasks(ts.filter(t => t.done === false && t.dueDate).filter(t => new Date(t.dueDate) <= new Date())));\n  }, [tasks]);\n\n  const removeTask = t => {\n    deleteTask(t).then(setTasks(tasks.filter(task => t.id !== task.id)));\n  };\n\n  const updateDone = t => {\n    patchTask(t).then(() => setTasks([...tasks]));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"task-list\",\n    children: tasks.map((t, i) => /*#__PURE__*/_jsxDEV(Task, {\n      task: t,\n      getRemoveTask: removeTask,\n      updateDone: updateDone,\n      lists: props.lists,\n      today: false\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NotDone, \"Qtrz6vakdAi0z9WiU2BC9GkpZpA=\");\n\n_c = NotDone;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotDone\");","map":{"version":3,"sources":["/home/intern/simmax/hooks/src/NotDone.js"],"names":["React","useState","useEffect","Task","deleteTask","patchTask","createTask","NotDone","props","tasks","setTasks","fetch","then","response","json","ts","filter","t","done","dueDate","Date","removeTask","task","id","updateDone","map","i","lists"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAAUC,UAAV,EAAqBC,SAArB,EAA+BC,UAA/B,QAAiD,4BAAjD;;AAGA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACnC,MAAI,CAACC,KAAD,EAAOC,QAAP,IAAmBT,QAAQ,CAAC,EAAD,CAA/B;AACAC,EAAAA,SAAS,CAAC,MAAI;AAACS,IAAAA,KAAK,CAAC,oCAAD,CAAL,CACdC,IADc,CACTC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EADD,EAEdF,IAFc,CAETG,EAAE,IAAIL,QAAQ,CAACK,EAAE,CAACC,MAAH,CAAWC,CAAC,IAAGA,CAAC,CAACC,IAAF,KAAU,KAAX,IAAoBD,CAAC,CAACE,OAApC,EACpBH,MADoB,CACbC,CAAC,IAAE,IAAIG,IAAJ,CAASH,CAAC,CAACE,OAAX,KAAqB,IAAIC,IAAJ,EADX,CAAD,CAFL;AAG+B,GAHrC,EAKR,CAACX,KAAD,CALQ,CAAT;;AAMA,QAAMY,UAAU,GAAIJ,CAAD,IAAO;AACtBb,IAAAA,UAAU,CAACa,CAAD,CAAV,CAAcL,IAAd,CAAmBF,QAAQ,CAACD,KAAK,CAACO,MAAN,CAAcM,IAAD,IAAUL,CAAC,CAACM,EAAF,KAASD,IAAI,CAACC,EAArC,CAAD,CAA3B;AACD,GAFH;;AAIE,QAAMC,UAAU,GAAIP,CAAD,IAAO;AACxBZ,IAAAA,SAAS,CAACY,CAAD,CAAT,CAAaL,IAAb,CAAkB,MAAMF,QAAQ,CAAC,CAAC,GAAGD,KAAJ,CAAD,CAAhC;AACD,GAFD;;AAKF,sBACI;AAAK,IAAA,EAAE,EAAC,WAAR;AAAA,cAEIA,KAAK,CAACgB,GAAN,CAAU,CAACR,CAAD,EAAIS,CAAJ,kBACd,QAAC,IAAD;AAEE,MAAA,IAAI,EAAET,CAFR;AAGE,MAAA,aAAa,EAAEI,UAHjB;AAIE,MAAA,UAAU,EAAEG,UAJd;AAKE,MAAA,KAAK,EAAEhB,KAAK,CAACmB,KALf;AAME,MAAA,KAAK,EAAE;AANT,OACOD,CADP;AAAA;AAAA;AAAA;AAAA,YADI;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GAjCuBnB,O;;KAAAA,O","sourcesContent":["import React from 'react';\nimport {useState} from 'react';\nimport { useEffect } from 'react';\nimport Task from './Task';\nimport  { deleteTask,patchTask,createTask } from './task-service/api-service';\n\n\nexport default function NotDone(props) {\n    let [tasks,setTasks] = useState([]);\n    useEffect(()=>{fetch('http://localhost:5000/api/tasktodo')\n    .then(response=>response.json())\n    .then(ts => setTasks(ts.filter((t=>(t.done ===false)&&(t.dueDate)))\n    .filter(t=>new Date(t.dueDate)<=new Date())))}\n    \n    ,[tasks]);\n    const removeTask = (t) => {\n        deleteTask(t).then(setTasks(tasks.filter((task) => t.id !== task.id)));\n      };\n    \n      const updateDone = (t) => {\n        patchTask(t).then(() => setTasks([...tasks]));\n      };\n    \n     \n    return (\n        <div id=\"task-list\">\n            \n           {tasks.map((t, i) => (\n        <Task\n          key={i}\n          task={t}\n          getRemoveTask={removeTask}\n          updateDone={updateDone}\n          lists={props.lists}\n          today={false}\n        />\n        \n      ))}\n            </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}