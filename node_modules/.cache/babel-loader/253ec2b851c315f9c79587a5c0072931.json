{"ast":null,"code":"var _jsxFileName = \"/home/intern/simmax/hooks/src/components/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport '../styles/sidebar.css';\nimport { loadDashboard } from \"./store/dashboard/action\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from 'react';\nimport { Provider } from 'react-redux';\nimport { store } from './store/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dashboard({\n  lists,\n  selectedList\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadDashboard());\n  }, []);\n  const state = useSelector(state => state.dashboard);\n  console.log(state);\n\n  /*#__PURE__*/\n  _jsxDEV(Provider, {\n    store: store\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"list-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Lists\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(NavLink, {\n            to: `/today`,\n            activeClassName: \"active-link\",\n            className: \"link\",\n            children: \"today\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(NavLink, {\n            to: `/not-done`,\n            activeClassName: \"active-link\",\n            className: \"link\",\n            children: \"Not Finished Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: lists.map(l => /*#__PURE__*/_jsxDEV(NavLink, {\n          to: `/todo-list/${l.id}`,\n          onClick: () => selectedList(l),\n          activeClassName: \"active-link\",\n          className: \"link\",\n          children: [l.title, \" \"]\n        }, l.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Dashboard, \"AfGwZBpDcyZ4hjuRBqb3pHilgDc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/intern/simmax/hooks/src/components/Dashboard.js"],"names":["React","NavLink","loadDashboard","useDispatch","useSelector","useEffect","Provider","store","Dashboard","lists","selectedList","dispatch","state","dashboard","console","log","map","l","id","title"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAO,uBAAP;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAAOC,SAAP,QAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAAQC,KAAR,QAAoB,eAApB;;AAEA,eAAe,SAASC,SAAT,CAAmB;AAACC,EAAAA,KAAD;AAAOC,EAAAA;AAAP,CAAnB,EAAyC;AAAA;;AACpD,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,QAAQ,CAACT,aAAa,EAAd,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAMU,KAAK,GAAGR,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,SAAlB,CAAzB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;;AACA;AAAA,UAAC,QAAD;AAAU,IAAA,KAAK,EAAIL;AAAnB;AAAA;AAAA;AAAA;AAAA;;AAGA,sBACI;AAAA,2BACI;AAAK,MAAA,EAAE,EAAC,cAAR;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAA,gCACA;AAAA,iCAAI,QAAC,OAAD;AAAS,YAAA,EAAE,EAAG,QAAd;AAAuB,YAAA,eAAe,EAAC,aAAvC;AAAqD,YAAA,SAAS,EAAC,MAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAA,iCAAI,QAAC,OAAD;AAAS,YAAA,EAAE,EAAG,WAAd;AAA0B,YAAA,eAAe,EAAC,aAA1C;AAAwD,YAAA,SAAS,EAAC,MAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAMA;AAAA,kBAEIE,KAAK,CAACO,GAAN,CAAWC,CAAD,iBACN,QAAC,OAAD;AAAS,UAAA,EAAE,EAAG,cAAaA,CAAC,CAACC,EAAG,EAAhC;AAAmC,UAAA,OAAO,EAAE,MAAIR,YAAY,CAACO,CAAD,CAA5D;AAA4E,UAAA,eAAe,EAAC,aAA5F;AAA0G,UAAA,SAAS,EAAC,MAApH;AAAA,qBAA4HA,CAAC,CAACE,KAA9H;AAAA,WAAsEF,CAAC,CAACC,EAAxE;AAAA;AAAA;AAAA;AAAA,gBADJ;AAFJ;AAAA;AAAA;AAAA;AAAA,cANA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;;GA9BuBV,S;UACHL,W,EAMHC,W;;;KAPMI,S","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom';\nimport '../styles/sidebar.css';\nimport { loadDashboard } from \"./store/dashboard/action\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport{useEffect} from 'react';\nimport { Provider } from 'react-redux';\nimport {store} from './store/index';\n\nexport default function Dashboard({lists,selectedList}) {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n      dispatch(loadDashboard());\n    }, []);\n  \n    const state = useSelector((state) => state.dashboard);\n    console.log(state);\n    <Provider store = {store} />\n\n\n    return (\n        <ul>\n            <div id='list-sidebar'>\n            <h2>Lists</h2>\n            <ul>\n            <li><NavLink to={`/today`} activeClassName=\"active-link\" className='link'>today</NavLink></li>\n            <li><NavLink to={`/not-done`} activeClassName=\"active-link\" className='link'>Not Finished Tasks</NavLink></li>\n            </ul>\n            <div>\n            { \n                lists.map((l) => \n                    <NavLink to={`/todo-list/${l.id}`} onClick={()=>selectedList(l)} key={l.id} activeClassName=\"active-link\" className='link'>{l.title} </NavLink>\n                )\n            }\n            </div>\n        </div>        \n        </ul>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}