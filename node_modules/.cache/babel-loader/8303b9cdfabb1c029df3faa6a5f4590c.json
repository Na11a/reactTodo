{"ast":null,"code":"var _jsxFileName = \"/home/intern/simmax/hooks/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport NewTaskForm from \"./NewTaskForm\";\nimport Tasks from \"./Tasks\";\nimport TodoListSidebar from \"./TodoListSidebar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let [tasks, setTasks] = useState([{\n    id: 1,\n    title: \"First\",\n    desc: \"first desc\",\n    done: true,\n    dueDate: new Date(\"2020-12-12\"),\n    listId: 1\n  }, {\n    id: 2,\n    title: \"Second\",\n    desc: \"first desc\",\n    done: true,\n    dueDate: new Date(\"2011-11-11\"),\n    listId: 2\n  }]);\n  let [tasksInList, setListTask] = useState(tasks);\n  const listTasks = [{\n    id: 1,\n    title: 'today'\n  }, {\n    id: 2,\n    title: 'not-today'\n  }];\n\n  const addTask = task => {\n    setTasks([...tasks, task]);\n  };\n\n  const getTasksByList = listId => {\n    tasks.filter(t => t.listId == listId);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"tasks\",\n    children: [/*#__PURE__*/_jsxDEV(TodoListSidebar, {\n      listTasks: listTasks,\n      getListId: getTasksByList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewTaskForm, {\n      onSubmit: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"cgQov/51zMxSSZ+56YHfw5/67PQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/intern/simmax/hooks/src/App.js"],"names":["React","useState","NewTaskForm","Tasks","TodoListSidebar","App","tasks","setTasks","id","title","desc","done","dueDate","Date","listId","tasksInList","setListTask","listTasks","addTask","task","getTasksByList","filter","t"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CAC/B;AACEO,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,KAAK,EAAE,OAFT;AAGEC,IAAAA,IAAI,EAAE,YAHR;AAIEC,IAAAA,IAAI,EAAE,IAJR;AAKEC,IAAAA,OAAO,EAAE,IAAIC,IAAJ,CAAS,YAAT,CALX;AAMEC,IAAAA,MAAM,EAAE;AANV,GAD+B,EAS/B;AACEN,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,KAAK,EAAE,QAFT;AAGEC,IAAAA,IAAI,EAAE,YAHR;AAIEC,IAAAA,IAAI,EAAE,IAJR;AAKEC,IAAAA,OAAO,EAAE,IAAIC,IAAJ,CAAS,YAAT,CALX;AAMEC,IAAAA,MAAM,EAAE;AANV,GAT+B,CAAD,CAAhC;AAkBA,MAAI,CAACC,WAAD,EAAaC,WAAb,IAA4Bf,QAAQ,CAACK,KAAD,CAAxC;AAEA,QAAMW,SAAS,GAAG,CAAC;AAACT,IAAAA,EAAE,EAAC,CAAJ;AAAMC,IAAAA,KAAK,EAAC;AAAZ,GAAD,EAAsB;AAACD,IAAAA,EAAE,EAAC,CAAJ;AAAMC,IAAAA,KAAK,EAAC;AAAZ,GAAtB,CAAlB;;AACA,QAAMS,OAAO,GAAIC,IAAD,IAAU;AACxBZ,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWa,IAAX,CAAD,CAAR;AACD,GAFD;;AAGA,QAAMC,cAAc,GAAIN,MAAD,IAAW;AAEhCR,IAAAA,KAAK,CAACe,MAAN,CAAaC,CAAC,IAAIA,CAAC,CAACR,MAAF,IAAWA,MAA7B;AACD,GAHD;;AAIA,sBACE;AAAK,IAAA,EAAE,EAAC,OAAR;AAAA,4BACE,QAAC,eAAD;AAAiB,MAAA,SAAS,EAAEG,SAA5B;AAAuC,MAAA,SAAS,EAAEG;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEd;AAAd;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAEY;AAAvB;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GApCQb,G;;KAAAA,G;AAsCT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport NewTaskForm from \"./NewTaskForm\";\nimport Tasks from \"./Tasks\";\nimport TodoListSidebar from \"./TodoListSidebar\";\n\nfunction App() {\n  let [tasks, setTasks] = useState([\n    {\n      id: 1,\n      title: \"First\",\n      desc: \"first desc\",\n      done: true,\n      dueDate: new Date(\"2020-12-12\"),\n      listId: 1,\n    },\n    {\n      id: 2,\n      title: \"Second\",\n      desc: \"first desc\",\n      done: true,\n      dueDate: new Date(\"2011-11-11\"),\n      listId: 2,\n    },\n  ]);\n  let [tasksInList,setListTask] = useState(tasks)\n\n  const listTasks = [{id:1,title:'today'},{id:2,title:'not-today'}]\n  const addTask = (task) => {\n    setTasks([...tasks, task])\n  };\n  const getTasksByList = (listId) =>{\n\n    tasks.filter(t => t.listId ==listId)\n  }\n  return (\n    <div id=\"tasks\">\n      <TodoListSidebar listTasks={listTasks} getListId={getTasksByList}/>\n      <Tasks tasks={tasks}/>\n      <NewTaskForm onSubmit={addTask} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}