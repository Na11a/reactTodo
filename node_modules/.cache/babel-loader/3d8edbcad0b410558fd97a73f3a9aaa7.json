{"ast":null,"code":"var _jsxFileName = \"/home/intern/simmax/hooks/src/components/Tasks.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Task from \"./Task\";\nimport \"../styles/Tasks.css\";\nimport { useState, useEffect } from \"react\";\nimport NewTaskForm from \"../NewTaskForm\";\nimport { useParams } from \"react-router\";\nimport { loadTasks } from '../store/tasks/actions';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteTask, patchTask, createTask } from \"../task-service/api-service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = \"http://localhost:5000/api/\";\nexport default function Tasks(props) {\n  _s();\n\n  let lists = props.lists;\n  let {\n    id\n  } = useParams();\n  let [tasks, setTasks] = useState([]);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadTasks(id));\n  }, [id]);\n\n  const removeTask = t => {\n    deleteTask(t).then(setTasks(tasks.filter(task => t.id !== task.id)));\n  };\n\n  const updateDone = t => {\n    patchTask(t).then(() => setTasks([...tasks]));\n  };\n\n  const addTask = task => {\n    createTask(task, props.list).then(task => setTasks([...tasks, task]));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"task-list\",\n    children: [tasks.map((t, i) => /*#__PURE__*/_jsxDEV(Task, {\n      task: t,\n      getRemoveTask: removeTask,\n      updateDone: updateDone,\n      lists: lists\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(NewTaskForm, {\n      onSubmit: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Tasks, \"MEpA8vwkPm+qH92Z2vdHFN2C1Ms=\", false, function () {\n  return [useParams, useDispatch];\n});\n\n_c = Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["/home/intern/simmax/hooks/src/components/Tasks.js"],"names":["React","Task","useState","useEffect","NewTaskForm","useParams","loadTasks","useDispatch","useSelector","deleteTask","patchTask","createTask","url","Tasks","props","lists","id","tasks","setTasks","dispatch","removeTask","t","then","filter","task","updateDone","addTask","list","map","i"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,qBAAP;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAAQC,SAAR,QAAwB,wBAAxB;AACA,SAASC,WAAT,EAAqBC,WAArB,QAAwC,aAAxC;AAEA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,UAAhC,QAAkD,6BAAlD;;AACA,MAAMC,GAAG,GAAG,4BAAZ;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AACnC,MAAIC,KAAK,GAAGD,KAAK,CAACC,KAAlB;AACA,MAAI;AAAEC,IAAAA;AAAF,MAASX,SAAS,EAAtB;AACA,MAAI,CAACY,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMiB,QAAQ,GAAGZ,WAAW,EAA5B;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,QAAQ,CAACb,SAAS,CAACU,EAAD,CAAV,CAAR;AACD,GAFQ,EAEN,CAACA,EAAD,CAFM,CAAT;;AAMA,QAAMI,UAAU,GAAIC,CAAD,IAAO;AACxBZ,IAAAA,UAAU,CAACY,CAAD,CAAV,CAAcC,IAAd,CAAmBJ,QAAQ,CAACD,KAAK,CAACM,MAAN,CAAcC,IAAD,IAAUH,CAAC,CAACL,EAAF,KAASQ,IAAI,CAACR,EAArC,CAAD,CAA3B;AACD,GAFD;;AAIA,QAAMS,UAAU,GAAIJ,CAAD,IAAO;AACxBX,IAAAA,SAAS,CAACW,CAAD,CAAT,CAAaC,IAAb,CAAkB,MAAMJ,QAAQ,CAAC,CAAC,GAAGD,KAAJ,CAAD,CAAhC;AACD,GAFD;;AAIA,QAAMS,OAAO,GAAIF,IAAD,IAAU;AACxBb,IAAAA,UAAU,CAACa,IAAD,EAAOV,KAAK,CAACa,IAAb,CAAV,CAA6BL,IAA7B,CAAmCE,IAAD,IAAUN,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWO,IAAX,CAAD,CAApD;AACD,GAFD;;AAGA,sBACE;AAAK,IAAA,EAAE,EAAC,WAAR;AAAA,eACGP,KAAK,CAACW,GAAN,CAAU,CAACP,CAAD,EAAIQ,CAAJ,kBACT,QAAC,IAAD;AAEE,MAAA,IAAI,EAAER,CAFR;AAGE,MAAA,aAAa,EAAED,UAHjB;AAIE,MAAA,UAAU,EAAEK,UAJd;AAKE,MAAA,KAAK,EAAEV;AALT,OACOc,CADP;AAAA;AAAA;AAAA;AAAA,YADD,CADH,eAUE,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAEH;AAAvB;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GApCuBb,K;UAETR,S,EAEIE,W;;;KAJKM,K","sourcesContent":["import React from \"react\";\nimport Task from \"./Task\";\nimport \"../styles/Tasks.css\";\nimport { useState, useEffect } from \"react\";\nimport NewTaskForm from \"../NewTaskForm\";\nimport { useParams } from \"react-router\";\nimport {loadTasks} from '../store/tasks/actions'\nimport { useDispatch,useSelector } from \"react-redux\";\n\nimport { deleteTask, patchTask, createTask } from \"../task-service/api-service\";\nconst url = \"http://localhost:5000/api/\";\n\nexport default function Tasks(props) {\n  let lists = props.lists;\n  let { id } = useParams();\n  let [tasks, setTasks] = useState([]);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadTasks(id))\n  }, [id]);\n\n  \n\n  const removeTask = (t) => {\n    deleteTask(t).then(setTasks(tasks.filter((task) => t.id !== task.id)));\n  };\n\n  const updateDone = (t) => {\n    patchTask(t).then(() => setTasks([...tasks]));\n  };\n\n  const addTask = (task) => {\n    createTask(task, props.list).then((task) => setTasks([...tasks, task]));\n  };\n  return (\n    <div id=\"task-list\">\n      {tasks.map((t, i) => (\n        <Task\n          key={i}\n          task={t}\n          getRemoveTask={removeTask}\n          updateDone={updateDone}\n          lists={lists}\n        />\n      ))}\n      <NewTaskForm onSubmit={addTask} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}