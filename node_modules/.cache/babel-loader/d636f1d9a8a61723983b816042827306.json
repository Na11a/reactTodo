{"ast":null,"code":"var _jsxFileName = \"/home/intern/simmax/hooks/src/NotDone.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NotDone() {\n  _s();\n\n  [tasks, setTasks] = useState(null);\n  useEffect(() => fetch('http://localhost:5000/api/tasktodo').then(response => response.json()).then(ts => setTasks(ts)), []);\n\n  const testTask = t => {\n    if (t.done == true) {\n      return t;\n    }\n  };\n\n  console.log(tasks.map(t => t));\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NotDone, \"guVkFVVSew6hH2g/XBdZM40Ur3I=\");\n\n_c = NotDone;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotDone\");","map":{"version":3,"sources":["/home/intern/simmax/hooks/src/NotDone.js"],"names":["React","useState","useEffect","NotDone","tasks","setTasks","fetch","then","response","json","ts","testTask","t","done","console","log","map"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,OAA1B;;AACA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAC7B,GAACC,KAAD,EAAOC,QAAP,IAAmBJ,QAAQ,CAAC,IAAD,CAA3B;AACDC,EAAAA,SAAS,CAAC,MAAII,KAAK,CAAC,oCAAD,CAAL,CACdC,IADc,CACTC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EADD,EAEdF,IAFc,CAERG,EAAD,IAAQL,QAAQ,CAACK,EAAD,CAFP,CAAL,EAGR,EAHQ,CAAT;;AAIA,QAAMC,QAAQ,GAAIC,CAAD,IAAM;AACnB,QAAGA,CAAC,CAACC,IAAF,IAAU,IAAb,EAAkB;AACd,aAAOD,CAAP;AACH;AACJ,GAJD;;AAKAE,EAAAA,OAAO,CAACC,GAAR,CAAYX,KAAK,CAACY,GAAN,CAAUJ,CAAC,IAAEA,CAAb,CAAZ;AACA,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAIH;;GAhBuBT,O;;KAAAA,O","sourcesContent":["import React from 'react';\nimport {useState} from 'react';\nimport { useEffect } from 'react';\nexport default function NotDone() {\n     [tasks,setTasks] = useState(null);\n    useEffect(()=>fetch('http://localhost:5000/api/tasktodo').\n    then(response=>response.json()).\n    then((ts) => setTasks(ts))\n    ,[])\n    const testTask = (t) =>{\n        if(t.done == true){\n            return t\n        }\n    }\n    console.log(tasks.map(t=>t))\n    return (\n        <div>\n            </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}