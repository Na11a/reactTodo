{"ast":null,"code":"var _jsxFileName = \"/home/intern/simmax/hooks/src/NewTaskForm.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Form.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useForm = (...fields) => ({\n  reset: () => fields.forEach(f => f.reset()),\n  getValue: () => buildObject(...fields)\n});\n\nconst useFormField = (init, name) => {\n  _s();\n\n  const [value, setValue] = useState(init);\n  return {\n    value: value,\n    name: name,\n    reset: (value = init) => setValue(value),\n    onChange: e => setValue(e.target.value)\n  };\n};\n\n_s(useFormField, \"j80iA4n291hRjSRYkqMQuIMjIg0=\");\n\nfunction buildObject(...fields) {\n  const object = [];\n\n  for (let field of fields) {\n    object[field.name] = field.value;\n  }\n\n  return object;\n}\n\nexport default function NewTaskForm(props) {\n  _s2();\n\n  const title = useFormField('', 'title');\n  const desc = useFormField('', 'desc');\n  const dueDate = useFormField('', 'dueDate');\n  const taskForm = useForm(title, desc, dueDate);\n\n  const onSubmitHandler = event => {\n    event.preventDefault();\n    let task = taskForm.getValue();\n    props.onSubmit(taskForm);\n    taskForm.reset();\n    console.log();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"taskForm\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"taskForm\",\n      onSubmit: onSubmitHandler,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ...title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ...desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        ...dueDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(NewTaskForm, \"VHt4cW6RsLxJkKJVJVzGzzA3BGE=\", false, function () {\n  return [useFormField, useFormField, useFormField, useForm];\n});\n\n_c = NewTaskForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTaskForm\");","map":{"version":3,"sources":["/home/intern/simmax/hooks/src/NewTaskForm.js"],"names":["React","useState","useForm","fields","reset","forEach","f","getValue","buildObject","useFormField","init","name","value","setValue","onChange","e","target","object","field","NewTaskForm","props","title","desc","dueDate","taskForm","onSubmitHandler","event","preventDefault","task","onSubmit","console","log"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,YAAP;;;AAEA,MAAMC,OAAO,GAAG,CAAC,GAAGC,MAAJ,MAAgB;AAC9BC,EAAAA,KAAK,EAAE,MAAMD,MAAM,CAACE,OAAP,CAAeC,CAAC,IAAIA,CAAC,CAACF,KAAF,EAApB,CADiB;AAE9BG,EAAAA,QAAQ,EAAE,MAAMC,WAAW,CAAC,GAAGL,MAAJ;AAFG,CAAhB,CAAhB;;AAKA,MAAMM,YAAY,GAAG,CAACC,IAAD,EAAMC,IAAN,KAAe;AAAA;;AAChC,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBZ,QAAQ,CAACS,IAAD,CAAjC;AACA,SAAO;AACHE,IAAAA,KAAK,EAACA,KADH;AAEHD,IAAAA,IAAI,EAACA,IAFF;AAGHP,IAAAA,KAAK,EAAE,CAACQ,KAAK,GAAGF,IAAT,KAAkBG,QAAQ,CAACD,KAAD,CAH9B;AAIHE,IAAAA,QAAQ,EAAGC,CAAD,IAAKF,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASJ,KAAV;AAJpB,GAAP;AAMH,CARD;;GAAMH,Y;;AASN,SAASD,WAAT,CAAqB,GAAGL,MAAxB,EAA+B;AAC3B,QAAMc,MAAM,GAAG,EAAf;;AACA,OAAK,IAAIC,KAAT,IAAkBf,MAAlB,EAAyB;AACrBc,IAAAA,MAAM,CAACC,KAAK,CAACP,IAAP,CAAN,GAAqBO,KAAK,CAACN,KAA3B;AACH;;AACD,SAAOK,MAAP;AACH;;AACD,eAAe,SAASE,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACvC,QAAMC,KAAK,GAAGZ,YAAY,CAAC,EAAD,EAAI,OAAJ,CAA1B;AACA,QAAMa,IAAI,GAAGb,YAAY,CAAC,EAAD,EAAI,MAAJ,CAAzB;AACA,QAAMc,OAAO,GAAGd,YAAY,CAAC,EAAD,EAAI,SAAJ,CAA5B;AAEA,QAAMe,QAAQ,GAAGtB,OAAO,CAACmB,KAAD,EAAQC,IAAR,EAAcC,OAAd,CAAxB;;AAEF,QAAME,eAAe,GAAIC,KAAD,IAAW;AACjCA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAIC,IAAI,GAAGJ,QAAQ,CAACjB,QAAT,EAAX;AAEAa,IAAAA,KAAK,CAACS,QAAN,CAAeL,QAAf;AACAA,IAAAA,QAAQ,CAACpB,KAAT;AACA0B,IAAAA,OAAO,CAACC,GAAR;AACD,GAPD;;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,2BACE;AAAM,MAAA,EAAE,EAAC,UAAT;AAAoB,MAAA,QAAQ,EAAEN,eAA9B;AAA+C,MAAA,YAAY,EAAC,KAA5D;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAA,WAAuBJ;AAAvB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAA,WAAuBC;AAAvB;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAA,WAAuBC;AAAvB;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;IA1BuBJ,W;UACNV,Y,EACDA,Y,EACGA,Y,EAECP,O;;;KALGiB,W","sourcesContent":["import React, { useState } from \"react\";\nimport \"./Form.css\";\n\nconst useForm = (...fields) => ({\n  reset: () => fields.forEach(f => f.reset()),\n  getValue: () => buildObject(...fields)\n})\n\nconst useFormField = (init,name) => {\n    const [value,setValue] = useState(init);\n    return {\n        value:value,\n        name:name,\n        reset: (value = init) => setValue(value),\n        onChange: (e)=>setValue(e.target.value)\n    }\n};\nfunction buildObject(...fields){\n    const object = []\n    for (let field of fields){\n        object[field.name] = field.value\n    }\n    return object\n}\nexport default function NewTaskForm(props) {\n    const title = useFormField('','title')\n    const desc = useFormField('','desc')\n    const dueDate = useFormField('','dueDate')\n\n    const taskForm = useForm(title, desc, dueDate)\n\n  const onSubmitHandler = (event) => {\n    event.preventDefault();\n    let task = taskForm.getValue();\n        \n    props.onSubmit(taskForm)\n    taskForm.reset()\n    console.log()\n  }\n\n  return (\n    <div className=\"taskForm\">\n      <form id=\"taskForm\" onSubmit={onSubmitHandler} autoComplete=\"off\">\n        <input type=\"text\" {...title}/>\n        <input type=\"text\" {...desc} />\n        <input type=\"date\" {...dueDate} />\n        <input type=\"submit\" />\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}