{"ast":null,"code":"import { get } from \"react-hook-form\";\nimport { createStore } from \"redux\";\nexport const getDashboard = () => {\n  fetch('http://localhost:5000/api/tasklists').then(response => response.json()).then(lists => ({\n    type: 'SHOW_DASHBOARD',\n    payload: lists\n  }));\n};\n\nconst dashboard = (state = {\n  dashboard: null\n}, action) => {\n  switch (action.type) {\n    case 'SHOW_DASHBOARD':\n      return {\n        dashboard: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(dashboard(getDashboard));\nconsole.log(store.getState());","map":{"version":3,"sources":["/home/intern/simmax/hooks/src/reducers/dashboardReducer.js"],"names":["get","createStore","getDashboard","fetch","then","response","json","lists","type","payload","dashboard","state","action","store","console","log","getState"],"mappings":"AAAA,SAASA,GAAT,QAAoB,iBAApB;AACA,SAASC,WAAT,QAA4B,OAA5B;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAK;AAE7BC,EAAAA,KAAK,CAAC,qCAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EADhB,EAECF,IAFD,CAEMG,KAAK,KAAK;AAACC,IAAAA,IAAI,EAAE,gBAAP;AAAwBC,IAAAA,OAAO,EAAEF;AAAjC,GAAL,CAFX;AAGH,CALM;;AAOP,MAAMG,SAAS,GAAE,CAACC,KAAK,GAAC;AAACD,EAAAA,SAAS,EAAC;AAAX,CAAP,EAAwBE,MAAxB,KAAmC;AAChD,UAAOA,MAAM,CAACJ,IAAd;AACY,SAAK,gBAAL;AACK,aAAM;AACFE,QAAAA,SAAS,EAACE,MAAM,CAACH;AADf,OAAN;;AAGL;AACK,aAAOE,KAAP;AANjB;AAQH,CATD;;AAUA,MAAME,KAAK,GAAGZ,WAAW,CAACS,SAAS,CAACR,YAAD,CAAV,CAAzB;AACAY,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAN,EAAZ","sourcesContent":["import { get } from \"react-hook-form\";\nimport { createStore } from \"redux\";\n\nexport const getDashboard = () =>{\n\n    fetch('http://localhost:5000/api/tasklists')\n    .then(response=>response.json())\n    .then(lists => ({type: 'SHOW_DASHBOARD',payload: lists}))\n}\n\nconst dashboard =(state={dashboard:null},action) => {\n    switch(action.type){\n                case 'SHOW_DASHBOARD':\n                     return{\n                         dashboard:action.payload\n                     }\n                default:\n                     return state\n             }\n}\nconst store = createStore(dashboard(getDashboard))\nconsole.log(store.getState())"]},"metadata":{},"sourceType":"module"}