{"ast":null,"code":"var _jsxFileName = \"/home/intern/simmax/hooks/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport NewTaskForm from \"./NewTaskForm\";\nimport Tasks from \"./Tasks\";\nimport TodoListSidebar from \"./TodoListSidebar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst lists = [{\n  id: 1,\n  title: 'today'\n}, {\n  id: 2,\n  title: 'not-today'\n}];\nconst api = 'http://localhost:5000/api/tasktodo';\n\nfunction App() {\n  _s();\n\n  let [tasks, setTasks] = useState([{\n    id: 1,\n    title: \"First\",\n    desc: \"first desc\",\n    done: true,\n    dueDate: new Date(\"2020-12-12\"),\n    listId: 1\n  }, {\n    id: 2,\n    title: \"Second\",\n    desc: \"first desc\",\n    done: true,\n    dueDate: new Date(\"2011-11-11\"),\n    listId: 2\n  }]);\n  let [list, setList] = useState(lists[0]);\n\n  const removeTask = t => {\n    setTasks(tasks.filter(task => t.id != task.id));\n    console.log(t);\n  };\n\n  const addTask = task => {\n    let index = 1;\n\n    if (tasks.length != 0) {\n      index = tasks[tasks.length - 1].id + 1;\n    }\n\n    setTasks([...tasks, { ...task,\n      listId: list.id,\n      id: index\n    }]);\n  };\n\n  useEffect(() => {\n    fetch(api).then(response => response.json).then;\n  }, [input]);\n  let taskList = tasks.filter(t => t.listId == list.id);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"tasks\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"use-list\",\n      children: /*#__PURE__*/_jsxDEV(TodoListSidebar, {\n        lists: lists,\n        selectedList: list,\n        onSelect: setList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"use-task\",\n      children: [/*#__PURE__*/_jsxDEV(Tasks, {\n        tasks: taskList,\n        getTask: removeTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NewTaskForm, {\n        onSubmit: addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"SV3LE9B6GmYZtVUYfg3GsUof9W8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/intern/simmax/hooks/src/App.js"],"names":["React","useState","NewTaskForm","Tasks","TodoListSidebar","lists","id","title","api","App","tasks","setTasks","desc","done","dueDate","Date","listId","list","setList","removeTask","t","filter","task","console","log","addTask","index","length","useEffect","fetch","then","response","json","input","taskList"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport NewTaskForm from \"./NewTaskForm\";\nimport Tasks from \"./Tasks\";\nimport TodoListSidebar from \"./TodoListSidebar\";\nconst lists = [{id:1,title:'today'},{id:2,title:'not-today'}]\nconst api = 'http://localhost:5000/api/tasktodo'\nfunction App() {\n  let [tasks, setTasks] = useState([\n    {\n      id: 1,\n      title: \"First\",\n      desc: \"first desc\",\n      done: true,\n      dueDate: new Date(\"2020-12-12\"),\n      listId: 1,\n    },\n    {\n      id: 2,\n      title: \"Second\",\n      desc: \"first desc\",\n      done: true,\n      dueDate: new Date(\"2011-11-11\"),\n      listId: 2,\n    },\n  ]);\n  let [list,setList] = useState(lists[0])\n  const removeTask = (t) =>{\n      setTasks(tasks.filter(task=>t.id !=task.id))\n    console.log(t)}\n\n  const addTask = (task) => {\n    let index = 1\n    if (tasks.length !=0){ \n      index = tasks[tasks.length -1].id + 1\n      }\n  setTasks([...tasks, {...task,listId:list.id,id:index}])\n  };\n  useEffect(() =>{fetch(api).then(response=>response.json).then\n  }\n  , [input])  \n  let taskList = tasks.filter(t=>t.listId ==list.id)\n  return (\n    <div id=\"tasks\">\n      <div className=\"use-list\">\n        <TodoListSidebar lists={lists} selectedList={list} onSelect={setList} />\n      </div>\n      <div className=\"use-task\">\n        <Tasks tasks={taskList} getTask={removeTask}/>\n        <NewTaskForm onSubmit={addTask} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}