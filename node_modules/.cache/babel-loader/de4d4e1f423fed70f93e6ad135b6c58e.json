{"ast":null,"code":"var _jsxFileName = \"/home/intern/simmax/hooks/src/components/Tasks.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Task from \"./Task\";\nimport \"../styles/Tasks.css\";\nimport { useState, useEffect } from \"react\";\nimport NewTaskForm from \"../NewTaskForm\";\nimport { useParams } from \"react-router\";\nimport { loadTasks, createTask, deleteTask, updateTask } from '../store/tasks/actions';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = \"http://localhost:5000/api/\";\nexport default function Tasks(props) {\n  _s();\n\n  let lists = props.lists;\n  let {\n    id\n  } = useParams();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadTasks(id));\n  }, [id]);\n  const tasks = useSelector(state => state.tasks);\n  console.log(tasks);\n\n  const removeTask = task => {\n    task.taskListId = id;\n    dispatch(deleteTask(task));\n  };\n\n  const updateDone = task => {\n    task.taskListId = id;\n    dispatch(updateTask(task));\n  };\n\n  const addTask = task => {\n    task.taskListId = id;\n    dispatch(createTask(task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"task-list\",\n    children: [tasks.map((t, i) => /*#__PURE__*/_jsxDEV(Task, {\n      task: t,\n      lists: lists,\n      getRemoveTask: removeTask,\n      getUpdateTask: updateDone\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(NewTaskForm, {\n      onSubmit: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Tasks, \"WWn2Rq1JwPhsaBoisj2lECJbuww=\", false, function () {\n  return [useParams, useDispatch, useSelector];\n});\n\n_c = Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["/home/intern/simmax/hooks/src/components/Tasks.js"],"names":["React","Task","useState","useEffect","NewTaskForm","useParams","loadTasks","createTask","deleteTask","updateTask","useDispatch","useSelector","url","Tasks","props","lists","id","dispatch","tasks","state","console","log","removeTask","task","taskListId","updateDone","addTask","map","t","i"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,qBAAP;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAAQC,SAAR,EAAkBC,UAAlB,EAA6BC,UAA7B,EAAwCC,UAAxC,QAAyD,wBAAzD;AACA,SAASC,WAAT,EAAqBC,WAArB,QAAwC,aAAxC;;AAEA,MAAMC,GAAG,GAAG,4BAAZ;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AACnC,MAAIC,KAAK,GAAGD,KAAK,CAACC,KAAlB;AACA,MAAI;AAAEC,IAAAA;AAAF,MAASX,SAAS,EAAtB;AACA,QAAMY,QAAQ,GAAGP,WAAW,EAA5B;AACAP,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,QAAQ,CAACX,SAAS,CAACU,EAAD,CAAV,CAAR;AACD,GAFQ,EAEN,CAACA,EAAD,CAFM,CAAT;AAIA,QAAME,KAAK,GAAGP,WAAW,CAACQ,KAAK,IAAEA,KAAK,CAACD,KAAd,CAAzB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;;AAEA,QAAMI,UAAU,GAAIC,IAAD,IAAU;AAC3BA,IAAAA,IAAI,CAACC,UAAL,GAAiBR,EAAjB;AACAC,IAAAA,QAAQ,CAACT,UAAU,CAACe,IAAD,CAAX,CAAR;AACD,GAHD;;AAKA,QAAME,UAAU,GAAIF,IAAD,IAAU;AAC3BA,IAAAA,IAAI,CAACC,UAAL,GAAkBR,EAAlB;AACAC,IAAAA,QAAQ,CAACR,UAAU,CAACc,IAAD,CAAX,CAAR;AACD,GAHD;;AAKA,QAAMG,OAAO,GAAIH,IAAD,IAAS;AACvBA,IAAAA,IAAI,CAACC,UAAL,GAAgBR,EAAhB;AACAC,IAAAA,QAAQ,CAACV,UAAU,CAACgB,IAAD,CAAX,CAAR;AACD,GAHD;;AAIA,sBACE;AAAK,IAAA,EAAE,EAAC,WAAR;AAAA,eACGL,KAAK,CAACS,GAAN,CAAU,CAACC,CAAD,EAAIC,CAAJ,kBACT,QAAC,IAAD;AAEE,MAAA,IAAI,EAAED,CAFR;AAGE,MAAA,KAAK,EAAEb,KAHT;AAIE,MAAA,aAAa,EAAEO,UAJjB;AAKE,MAAA,aAAa,EAAEG;AALjB,OACOI,CADP;AAAA;AAAA;AAAA;AAAA,YADD,CADH,eAUE,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAEH;AAAvB;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAvCuBb,K;UAETR,S,EACIK,W,EAKHC,W;;;KARQE,K","sourcesContent":["import React from \"react\";\nimport Task from \"./Task\";\nimport \"../styles/Tasks.css\";\nimport { useState, useEffect } from \"react\";\nimport NewTaskForm from \"../NewTaskForm\";\nimport { useParams } from \"react-router\";\nimport {loadTasks,createTask,deleteTask,updateTask} from '../store/tasks/actions'\nimport { useDispatch,useSelector } from \"react-redux\";\n\nconst url = \"http://localhost:5000/api/\";\n\nexport default function Tasks(props) {\n  let lists = props.lists;\n  let { id } = useParams();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadTasks(id))\n  }, [id]);\n\n  const tasks = useSelector(state=>state.tasks)\n  console.log(tasks)\n\n  const removeTask = (task) => {\n    task.taskListId =id;\n    dispatch(deleteTask(task))\n  };\n\n  const updateDone = (task) => {\n    task.taskListId = id;\n    dispatch(updateTask(task))\n  };\n\n  const addTask = (task) =>{\n    task.taskListId=id    \n    dispatch(createTask(task))\n  }\n  return (\n    <div id=\"task-list\">\n      {tasks.map((t, i) => (\n        <Task\n          key={i}\n          task={t}\n          lists={lists}\n          getRemoveTask={removeTask}\n          getUpdateTask={updateDone}\n        />\n      ))}\n      <NewTaskForm onSubmit={addTask}/>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}