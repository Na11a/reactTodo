{"ast":null,"code":"var _jsxFileName = \"/home/intern/simmax/hooks/src/components/TodayTasks.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Task from \"./Task\";\nimport { useState, useEffect } from \"react\";\nimport \"./styles/Tasks.css\";\nimport NewTaskForm from \"../NewTaskForm\";\nimport '../task-service/api-service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = \"http://localhost:5000/api/\";\nexport default function TodayTasks(props) {\n  _s();\n\n  let [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    fetch(url + \"tasktodo/colections/today\").then(response => response.json()).then(setTasks);\n  }, []);\n\n  const removeTask = t => {\n    fetch(url + `tasktodo/${t.id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(t)\n    }).then(setTasks(tasks.filter(task => t.id !== task.id)));\n  };\n\n  const updateDone = t => {\n    fetch(url + `tasktodo/${t.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(t)\n    }).then(response => response.json()).then(() => setTasks([...tasks]));\n  };\n\n  const addTask = task => {\n    fetch(url + `tasktodo/`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({ ...task\n      })\n    }).then(response => response.json()).then(task => setTasks([...tasks, task]));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"task-list\",\n    children: [tasks.map((t, i) => /*#__PURE__*/_jsxDEV(Task, {\n      task: t,\n      getRemoveTask: removeTask,\n      updateDone: updateDone,\n      lists: props.lists,\n      showListTitle: true\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(NewTaskForm, {\n      onSubmit: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodayTasks, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n\n_c = TodayTasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodayTasks\");","map":{"version":3,"sources":["/home/intern/simmax/hooks/src/components/TodayTasks.js"],"names":["React","Task","useState","useEffect","NewTaskForm","url","TodayTasks","props","tasks","setTasks","fetch","then","response","json","removeTask","t","id","method","headers","body","JSON","stringify","filter","task","updateDone","addTask","map","i","lists"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,oBAAP;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAO,6BAAP;;AACA,MAAMC,GAAG,GAAG,4BAAZ;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACxC,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAhC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,KAAK,CAACL,GAAG,GAAG,2BAAP,CAAL,CACGM,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAEQF,QAFR;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMK,UAAU,GAAIC,CAAD,IAAO;AACxBL,IAAAA,KAAK,CAACL,GAAG,GAAI,YAAWU,CAAC,CAACC,EAAG,EAAxB,EAA2B;AAC9BC,MAAAA,MAAM,EAAE,QADsB;AAE9BC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFqB;AAM9BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,CAAf;AANwB,KAA3B,CAAL,CAOGJ,IAPH,CAOQF,QAAQ,CAACD,KAAK,CAACc,MAAN,CAAcC,IAAD,IAAUR,CAAC,CAACC,EAAF,KAASO,IAAI,CAACP,EAArC,CAAD,CAPhB;AAQD,GATD;;AAWA,QAAMQ,UAAU,GAAIT,CAAD,IAAO;AACxBL,IAAAA,KAAK,CAACL,GAAG,GAAI,YAAWU,CAAC,CAACC,EAAG,EAAxB,EAA2B;AAC9BC,MAAAA,MAAM,EAAE,OADsB;AAE9BC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFqB;AAM9BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,CAAf;AANwB,KAA3B,CAAL,CAQGJ,IARH,CAQSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EARtB,EASGF,IATH,CASQ,MAAMF,QAAQ,CAAC,CAAC,GAAGD,KAAJ,CAAD,CATtB;AAUD,GAXD;;AAaA,QAAMiB,OAAO,GAAIF,IAAD,IAAU;AACxBb,IAAAA,KAAK,CAACL,GAAG,GAAI,WAAR,EAAoB;AACvBY,MAAAA,MAAM,EAAE,MADe;AAEvBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFc;AAMvBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,EAAE,GAAGE;AAAL,OAAf;AANiB,KAApB,CAAL,CAQGZ,IARH,CAQSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EARtB,EASGF,IATH,CASSY,IAAD,IAAUd,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWe,IAAX,CAAD,CAT1B;AAUD,GAXD;;AAYA,sBACE;AAAK,IAAA,EAAE,EAAC,WAAR;AAAA,eACGf,KAAK,CAACkB,GAAN,CAAU,CAACX,CAAD,EAAIY,CAAJ,kBACT,QAAC,IAAD;AAEE,MAAA,IAAI,EAAEZ,CAFR;AAGE,MAAA,aAAa,EAAED,UAHjB;AAIE,MAAA,UAAU,EAAEU,UAJd;AAKE,MAAA,KAAK,EAAEjB,KAAK,CAACqB,KALf;AAME,MAAA,aAAa,EAAE;AANjB,OACOD,CADP;AAAA;AAAA;AAAA;AAAA,YADD,CADH,eAWE,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAEF;AAAvB;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GA3DuBnB,U;;KAAAA,U","sourcesContent":["import React from \"react\";\nimport Task from \"./Task\";\nimport { useState, useEffect } from \"react\";\nimport \"./styles/Tasks.css\";\nimport NewTaskForm from \"../NewTaskForm\";\nimport '../task-service/api-service';\nconst url = \"http://localhost:5000/api/\";\n\nexport default function TodayTasks(props) {\n  let [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    fetch(url + \"tasktodo/colections/today\")\n      .then((response) => response.json())\n      .then(setTasks);\n  }, []);\n\n  const removeTask = (t) => {\n    fetch(url + `tasktodo/${t.id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n\n      body: JSON.stringify(t),\n    }).then(setTasks(tasks.filter((task) => t.id !== task.id)));\n  };\n\n  const updateDone = (t) => {\n    fetch(url + `tasktodo/${t.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n\n      body: JSON.stringify(t),\n    })\n      .then((response) => response.json())\n      .then(() => setTasks([...tasks]));\n  };\n\n  const addTask = (task) => {\n    fetch(url + `tasktodo/`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n\n      body: JSON.stringify({ ...task }),\n    })\n      .then((response) => response.json())\n      .then((task) => setTasks([...tasks, task]));\n  };\n  return (\n    <div id=\"task-list\">\n      {tasks.map((t, i) => (\n        <Task\n          key={i}\n          task={t}\n          getRemoveTask={removeTask}\n          updateDone={updateDone}\n          lists={props.lists}\n          showListTitle={true}\n        />\n      ))}\n      <NewTaskForm onSubmit={addTask} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}