{"ast":null,"code":"var _jsxFileName = \"/home/intern/simmax/hooks/src/TodayTasks.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Tasks from './Tasks';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TodayTasks(props) {\n  _s();\n\n  const url = 'http://localhost:5000/api/tasktodo/colections/today';\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    fetch(url).then(response => response.json()).then(ts => setTasks(ts));\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodayTasks, \"Qtrz6vakdAi0z9WiU2BC9GkpZpA=\");\n\n_c = TodayTasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodayTasks\");","map":{"version":3,"sources":["/home/intern/simmax/hooks/src/TodayTasks.js"],"names":["React","Tasks","useState","useEffect","TodayTasks","props","url","tasks","setTasks","fetch","then","response","json","ts"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAAQC,QAAR,EAAiBC,SAAjB,QAAiC,OAAjC;;AACA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACtC,QAAMC,GAAG,GAAG,qDAAZ;AACA,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBN,QAAQ,CAAC,EAAD,CAAjC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,KAAK,CAACH,GAAD,CAAL,CACAI,IADA,CACKC,QAAQ,IAAGA,QAAQ,CAACC,IAAT,EADhB,EAEAF,IAFA,CAEKG,EAAE,IAAEL,QAAQ,CAACK,EAAD,CAFjB;AAGD,GAJM,CAAT;AAMA,sBACI;AAAA,2BACI,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEN;AAAd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAduBH,U;;KAAAA,U","sourcesContent":["import React from 'react'\nimport Tasks from './Tasks'\nimport {useState,useEffect} from 'react';\nexport default function TodayTasks(props) {\n    const url = 'http://localhost:5000/api/tasktodo/colections/today';\n    const [tasks,setTasks] = useState([]);\n    useEffect(() => {\n        fetch(url).\n        then(response =>response.json()).\n        then(ts=>setTasks(ts))\n      }\n    )\n    return (\n        <div>\n            <Tasks tasks={tasks}/>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}