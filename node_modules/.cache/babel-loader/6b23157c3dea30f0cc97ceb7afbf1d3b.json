{"ast":null,"code":"var _jsxFileName = \"/home/intern/simmax/hooks/src/Tasks.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Task from './Task';\nimport './styles/Tasks.css';\nimport { useState, useEffect } from 'react';\nimport NewTaskForm from './NewTaskForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = 'http://localhost:5000/api/';\nexport default function Tasks({\n  list\n}) {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    fetch(url + `tasklist/${list.id}/tasks`).then(response => response.json()).then(setTasks);\n  }, [list]);\n\n  const addTask = task => {\n    task = { ...task,\n      taskListId: list.id\n    };\n    fetch(url + `tasktodo/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    }).then(response => response.json()).then(task => setTasks([...tasks, task]));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"task-list\",\n    children: [tasks.map((t, i) => /*#__PURE__*/_jsxDEV(Task, {\n      task: t,\n      getRemoveTask: removeTask,\n      updateDone: updateDone\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 33\n    }, this)), /*#__PURE__*/_jsxDEV(NewTaskForm, {\n      onSubmit: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Tasks, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n\n_c = Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["/home/intern/simmax/hooks/src/Tasks.js"],"names":["React","Task","useState","useEffect","NewTaskForm","url","Tasks","list","tasks","setTasks","fetch","id","then","response","json","addTask","task","taskListId","method","headers","body","JSON","stringify","map","t","i","removeTask","updateDone"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,oBAAP;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AACA,MAAMC,GAAG,GAAG,4BAAZ;AAEA,eAAe,SAASC,KAAT,CAAe;AAACC,EAAAA;AAAD,CAAf,EAAuB;AAAA;;AAClC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AAGEC,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,KAAK,CAACL,GAAG,GAAE,YAAWE,IAAI,CAACI,EAAG,QAAzB,CAAL,CACAC,IADA,CACKC,QAAQ,IAAGA,QAAQ,CAACC,IAAT,EADhB,EAEAF,IAFA,CAEKH,QAFL;AAGD,GAJQ,EAIN,CAACF,IAAD,CAJM,CAAT;;AAMJ,QAAMQ,OAAO,GAAIC,IAAD,IAAU;AACxBA,IAAAA,IAAI,GAAG,EAAC,GAAGA,IAAJ;AAASC,MAAAA,UAAU,EAACV,IAAI,CAACI;AAAzB,KAAP;AACFD,IAAAA,KAAK,CAACL,GAAG,GAAE,WAAN,EACL;AAAEa,MAAAA,MAAM,EAAC,MAAT;AACEC,MAAAA,OAAO,EAAC;AACF,wBAAe;AADb,OADV;AAIEC,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeN,IAAf;AAJP,KADK,CAAL,CAMGJ,IANH,CAMQC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EANlB,EAMmCF,IANnC,CAMyCI,IAAD,IAASP,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWQ,IAAX,CAAD,CANzD;AAOD,GATC;;AAUE,sBACI;AAAK,IAAA,EAAE,EAAC,WAAR;AAAA,eACKR,KAAK,CAACe,GAAN,CAAU,CAACC,CAAD,EAAGC,CAAH,kBAAS,QAAC,IAAD;AAAc,MAAA,IAAI,EAAGD,CAArB;AAAwB,MAAA,aAAa,EAAEE,UAAvC;AAAmD,MAAA,UAAU,EAAEC;AAA/D,OAAWF,CAAX;AAAA;AAAA;AAAA;AAAA,YAAnB,CADL,eAEI,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAEV;AAAvB;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GA1BuBT,K;;KAAAA,K","sourcesContent":["import React from 'react';\nimport Task from './Task';\nimport './styles/Tasks.css';\nimport {useState, useEffect} from 'react';\nimport NewTaskForm from './NewTaskForm';\nconst url = 'http://localhost:5000/api/'\n\nexport default function Tasks({list}) {\n    const [tasks, setTasks] = useState([]);\n\n    \n      useEffect(() => {\n        fetch(url+`tasklist/${list.id}/tasks`).\n        then(response =>response.json()).\n        then(setTasks)\n      }, [list])\n\n  const addTask = (task) => {\n    task = {...task,taskListId:list.id}\n  fetch(url+`tasktodo/`,\n  { method:'POST',\n    headers:{\n          'Content-Type':'application/json'},\n\n    body:JSON.stringify(task)\n  }).then(response=>response.json()).then((task)=> setTasks([...tasks, task]))\n}\n    return (\n        <div id=\"task-list\">\n            {tasks.map((t,i) => <Task key={i} task ={t} getRemoveTask={removeTask} updateDone={updateDone}/>)} \n            <NewTaskForm onSubmit={addTask} /> \n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}