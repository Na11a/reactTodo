{"ast":null,"code":"var _jsxFileName = \"/home/intern/simmax/hooks/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport NewTaskForm from \"./NewTaskForm\";\nimport Tasks from \"./Tasks\";\nimport { useEffect } from 'react';\nimport TodoListSidebar from \"./TodoListSidebar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = 'http://localhost:5000/api/';\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  const [taskLists, setTaskLists] = useState([]);\n  const [list, setList] = useState({\n    id: 1\n  });\n\n  const removeTask = t => {\n    fetch(url + `tasktodo/${t.id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(t)\n    }).then(setTasks(tasks.filter(task => t.id !== task.id)));\n  };\n\n  const addTask = task => {\n    task = { ...task,\n      taskListId: list.id\n    };\n    fetch(url + `tasktodo/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    }).then(response => response.json()).then(task => setTasks([...tasks, task]));\n  };\n\n  useEffect(() => {\n    fetch(url + `tasklist/`).then(response => response.json()).then(function (lists) {\n      setTaskLists(lists);\n      setList(lists[0]);\n    });\n  }, []);\n  useEffect(() => {\n    fetch(url + `tasklist/${list.id}/tasks`).then(response => response.json()).then(ts => setTasks(ts));\n  }, [list]);\n\n  const updateDone = t => {\n    fetch(url + `tasktodo/${t.id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(t)\n    }).then(response => response.json()).then(() => setTasks([...tasks]));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"tasks\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoListSidebar\",\n      children: /*#__PURE__*/_jsxDEV(Dashboard, {\n        lists: taskLists,\n        selectedList: list,\n        onSelect: setList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks-info\",\n      children: [/*#__PURE__*/_jsxDEV(Tasks, {\n        tasks: tasks,\n        getRemoveTask: removeTask,\n        updateDone: updateDone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NewTaskForm, {\n        onSubmit: addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"dP9P6dbhha6FOiQao1GXgtiicR8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/intern/simmax/hooks/src/App.js"],"names":["React","useState","NewTaskForm","Tasks","useEffect","TodoListSidebar","url","App","tasks","setTasks","taskLists","setTaskLists","list","setList","id","removeTask","t","fetch","method","headers","body","JSON","stringify","then","filter","task","addTask","taskListId","response","json","lists","ts","updateDone"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport NewTaskForm from \"./NewTaskForm\";\nimport Tasks from \"./Tasks\";\nimport {useEffect} from 'react'\nimport TodoListSidebar from \"./TodoListSidebar\";\nconst url = 'http://localhost:5000/api/'\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [taskLists, setTaskLists] = useState([]);\n  const [list,setList] = useState({id:1});\n\n  const removeTask = (t) =>{\n      fetch(url+`tasktodo/${t.id}`,\n  { method:'DELETE',\n    headers:{\n          'Content-Type':'application/json'},\n\n    body:JSON.stringify(t)\n  }).then(setTasks(tasks.filter(task=>t.id !==task.id)))\n  }\n\n  const addTask = (task) => {\n    task = {...task,taskListId:list.id}\n  fetch(url+`tasktodo/`,\n  { method:'POST',\n    headers:{\n          'Content-Type':'application/json'},\n\n    body:JSON.stringify(task)\n  }).then(response=>response.json()).then((task)=> setTasks([...tasks, task]))\n}\n\n  useEffect(() =>{\n    fetch(url+`tasklist/`).then(response=>response.json())\n              .then(function(lists) {\n                setTaskLists(lists)\n                setList(lists[0])\n              })\n              \n  }\n  ,[])\n  useEffect(() => {\n    fetch(url+`tasklist/${list.id}/tasks`).\n    then(response =>response.json()).\n    then(ts=>setTasks(ts))\n  }, [list])\n  const updateDone =(t)=> {\n    fetch(url+`tasktodo/${t.id}`,\n  { method:'PATCH',\n    headers:{\n          'Content-Type':'application/json'},\n\n    body:JSON.stringify(t)\n  }).then(response=>response.json()).then(()=> setTasks([...tasks]))\n  }\n  \n  \n  return (\n    <div id=\"tasks\">\n      <div className=\"todoListSidebar\">\n        <Dashboard lists={taskLists} selectedList={list} onSelect={setList} />\n      </div>\n      <div className=\"tasks-info\">\n        <Tasks tasks={tasks} getRemoveTask={removeTask} updateDone={updateDone}/>\n        <NewTaskForm onSubmit={addTask} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}