{"ast":null,"code":"// import React from 'react';\n// import {useState} from 'react';\n// import { useEffect } from 'react';\n// import Task from './Task';\n// import NewTaskForm from './NewTaskForm';\n// import './task-service/api-service';\n// export default function NotDone(props) {\n//     let [tasks,setTasks] = useState([]);\n//     useEffect(()=>fetch('http://localhost:5000/api/tasktodo').\n//     then(response=>response.json()).\n//     then(setTasks)\n//     ,[])\n//     const removeTask = (t) => {\n//         deleteTask(t).then(setTasks(tasks.filter((task) => t.id !== task.id)));\n//       };\n//       const updateDone = (t) => {\n//         patchTask(t).then(() => setTasks([...tasks]));\n//       };\n//       const addTask = (task) => {\n//         createTask(task, props.list).then((task) => setTasks([...tasks, task]));\n//       };\n//     return (\n//         <div>\n//            {tasks.map((t, i) => (\n//         <Task\n//           key={i}\n//           task={t}\n//           getRemoveTask={removeTask}\n//           updateDone={updateDone}\n//           lists={props.lists}\n//           today={true}\n//         />\n//       ))}\n//     <NewTaskForm onSubmit={addTask} />\n//             </div>\n//     )\n// }","map":{"version":3,"sources":["/home/intern/simmax/hooks/src/NotDone.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["// import React from 'react';\n// import {useState} from 'react';\n// import { useEffect } from 'react';\n// import Task from './Task';\n// import NewTaskForm from './NewTaskForm';\n// import './task-service/api-service';\n\n\n// export default function NotDone(props) {\n//     let [tasks,setTasks] = useState([]);\n//     useEffect(()=>fetch('http://localhost:5000/api/tasktodo').\n//     then(response=>response.json()).\n//     then(setTasks)\n//     ,[])\n//     const removeTask = (t) => {\n//         deleteTask(t).then(setTasks(tasks.filter((task) => t.id !== task.id)));\n//       };\n    \n//       const updateDone = (t) => {\n//         patchTask(t).then(() => setTasks([...tasks]));\n//       };\n    \n//       const addTask = (task) => {\n//         createTask(task, props.list).then((task) => setTasks([...tasks, task]));\n//       };\n//     return (\n//         <div>\n//            {tasks.map((t, i) => (\n//         <Task\n//           key={i}\n//           task={t}\n//           getRemoveTask={removeTask}\n//           updateDone={updateDone}\n//           lists={props.lists}\n//           today={true}\n//         />\n        \n//       ))}\n//     <NewTaskForm onSubmit={addTask} />\n//             </div>\n//     )\n// }\n"]},"metadata":{},"sourceType":"module"}