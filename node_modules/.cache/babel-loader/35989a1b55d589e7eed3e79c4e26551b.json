{"ast":null,"code":"var _jsxFileName = \"/home/intern/simmax/hooks/src/NewTaskForm.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Form.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useFormField = (init, name) => {\n  _s();\n\n  const [value, setValue] = useState(init);\n  return {\n    value: value,\n    name: name,\n    onChange: e => setValue(e.target.value)\n  };\n};\n\n_s(useFormField, \"j80iA4n291hRjSRYkqMQuIMjIg0=\");\n\nfunction buildObject(...fields) {\n  const object = [];\n\n  for (let field of fields) {\n    object[field.name] = field.value;\n  }\n\n  return object;\n}\n\nexport default function NewTaskForm(props) {\n  _s2();\n\n  const title = useFormField('', 'title');\n  const desc = useFormField('', 'desc');\n  const checkbox = useFormField('', 'done');\n  const dueDate = useFormField('', 'dueDate');\n\n  const onSubmitHandler = event => {\n    event.preventDefault();\n    let taskForm = buildObject(title, desc, checkbox, dueDate);\n    props.onSubmit(taskForm);\n    console.log(taskForm);\n\n    for (let input in taskForm.values) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"taskForm\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmitHandler,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ...title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ...desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        ...dueDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(NewTaskForm, \"ONzEeOq40DGqeIZp8ukqdJ+P+F4=\", false, function () {\n  return [useFormField, useFormField, useFormField, useFormField];\n});\n\n_c = NewTaskForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTaskForm\");","map":{"version":3,"sources":["/home/intern/simmax/hooks/src/NewTaskForm.js"],"names":["React","useState","useFormField","init","name","value","setValue","onChange","e","target","buildObject","fields","object","field","NewTaskForm","props","title","desc","checkbox","dueDate","onSubmitHandler","event","preventDefault","taskForm","onSubmit","console","log","input","values"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,YAAP;;;AACA,MAAMC,YAAY,GAAG,CAACC,IAAD,EAAMC,IAAN,KAAe;AAAA;;AAChC,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBL,QAAQ,CAACE,IAAD,CAAjC;AACA,SAAO;AACHE,IAAAA,KAAK,EAACA,KADH;AAEHD,IAAAA,IAAI,EAACA,IAFF;AAGHG,IAAAA,QAAQ,EAAGC,CAAD,IAAKF,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASJ,KAAV;AAHpB,GAAP;AAKH,CAPD;;GAAMH,Y;;AAQN,SAASQ,WAAT,CAAqB,GAAGC,MAAxB,EAA+B;AAC3B,QAAMC,MAAM,GAAG,EAAf;;AACA,OAAK,IAAIC,KAAT,IAAkBF,MAAlB,EAAyB;AACrBC,IAAAA,MAAM,CAACC,KAAK,CAACT,IAAP,CAAN,GAAqBS,KAAK,CAACR,KAA3B;AACH;;AACD,SAAOO,MAAP;AACH;;AACD,eAAe,SAASE,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACvC,QAAMC,KAAK,GAAGd,YAAY,CAAC,EAAD,EAAI,OAAJ,CAA1B;AACA,QAAMe,IAAI,GAAGf,YAAY,CAAC,EAAD,EAAI,MAAJ,CAAzB;AACA,QAAMgB,QAAQ,GAAGhB,YAAY,CAAC,EAAD,EAAI,MAAJ,CAA7B;AACA,QAAMiB,OAAO,GAAGjB,YAAY,CAAC,EAAD,EAAI,SAAJ,CAA5B;;AAEF,QAAMkB,eAAe,GAAIC,KAAD,IAAW;AACjCA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAIC,QAAQ,GAAGb,WAAW,CAACM,KAAD,EAAOC,IAAP,EAAYC,QAAZ,EAAqBC,OAArB,CAA1B;AACAJ,IAAAA,KAAK,CAACS,QAAN,CAAeD,QAAf;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AACA,SAAI,IAAII,KAAR,IAAiBJ,QAAQ,CAACK,MAA1B,EAAiC,CAChC;AACF,GAPD;;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAER,eAAhB;AAAiC,MAAA,YAAY,EAAC,KAA9C;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAA,WAAuBJ;AAAvB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAA,WAAuBC;AAAvB;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAA,WAAuBE;AAAvB;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;IAzBuBL,W;UACNZ,Y,EACDA,Y,EACIA,Y,EACDA,Y;;;KAJIY,W","sourcesContent":["import React, { useState } from \"react\";\nimport \"./Form.css\";\nconst useFormField = (init,name) => {\n    const [value,setValue] = useState(init);\n    return {\n        value:value,\n        name:name,\n        onChange: (e)=>setValue(e.target.value)\n    }\n};\nfunction buildObject(...fields){\n    const object = []\n    for (let field of fields){\n        object[field.name] = field.value\n    }\n    return object\n}\nexport default function NewTaskForm(props) {\n    const title = useFormField('','title')\n    const desc = useFormField('','desc')\n    const checkbox = useFormField('','done')\n    const dueDate = useFormField('','dueDate')\n\n  const onSubmitHandler = (event) => {\n    event.preventDefault();\n    let taskForm = buildObject(title,desc,checkbox,dueDate)\n    props.onSubmit(taskForm)\n    console.log(taskForm)\n    for(let input in taskForm.values){\n    }\n  }\n\n  return (\n    <div className=\"taskForm\">\n      <form onSubmit={onSubmitHandler} autoComplete=\"off\">\n        <input type=\"text\" {...title} />\n        <input type=\"text\" {...desc} />\n        <input type=\"date\" {...dueDate} />\n        <input type=\"submit\" />\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}