{"ast":null,"code":"var _jsxFileName = \"/home/intern/simmax/hooks/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport NewTaskForm from \"./NewTaskForm\";\nimport Tasks from \"./Tasks\";\nimport { useEffect } from 'react';\nimport Dashboard from \"./Dashboard\";\nimport { Route } from \"react-router\";\nimport TodayTasks from './TodayTasks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = 'http://localhost:5000/api/';\n\nfunction App() {\n  _s();\n\n  const [taskLists, setTaskLists] = useState([]);\n  const [list, setList] = useState({\n    id: 1\n  });\n  useEffect(() => {\n    fetch(url + `tasklist/`).then(response => response.json()).then(function (lists) {\n      setTaskLists(lists);\n      setList(lists[0]);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"tasks\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoListSidebar\",\n      children: /*#__PURE__*/_jsxDEV(Dashboard, {\n        lists: taskLists,\n        selectedList: list,\n        onSelect: setList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks-info\",\n      children: /*#__PURE__*/_jsxDEV(Tasks, {\n        list: list\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"GABgNSqicQmL6M0YToOq4OjFkcc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/intern/simmax/hooks/src/App.js"],"names":["React","useState","NewTaskForm","Tasks","useEffect","Dashboard","Route","TodayTasks","url","App","taskLists","setTaskLists","list","setList","id","fetch","then","response","json","lists"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAAQC,SAAR,QAAwB,OAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AACA,MAAMC,GAAG,GAAG,4BAAZ;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACW,IAAD,EAAMC,OAAN,IAAiBZ,QAAQ,CAAC;AAACa,IAAAA,EAAE,EAAC;AAAJ,GAAD,CAA/B;AAEAV,EAAAA,SAAS,CAAC,MAAK;AACbW,IAAAA,KAAK,CAACP,GAAG,GAAE,WAAN,CAAL,CAAuBQ,IAAvB,CAA4BC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EAAtC,EACWF,IADX,CACgB,UAASG,KAAT,EAAgB;AACpBR,MAAAA,YAAY,CAACQ,KAAD,CAAZ;AACAN,MAAAA,OAAO,CAACM,KAAK,CAAC,CAAD,CAAN,CAAP;AACD,KAJX;AAMD,GAPQ,EAQR,EARQ,CAAT;AAUA,sBACE;AAAK,IAAA,EAAE,EAAC,OAAR;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,KAAK,EAAET,SAAlB;AAA6B,QAAA,YAAY,EAAEE,IAA3C;AAAiD,QAAA,QAAQ,EAAEC;AAA3D;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAED;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAzBQH,G;;KAAAA,G;AA2BT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport NewTaskForm from \"./NewTaskForm\";\nimport Tasks from \"./Tasks\";\nimport {useEffect} from 'react'\nimport Dashboard from \"./Dashboard\";\nimport { Route } from \"react-router\";\nimport TodayTasks from './TodayTasks'\nconst url = 'http://localhost:5000/api/'\nfunction App() {\n  const [taskLists, setTaskLists] = useState([]);\n  const [list,setList] = useState({id:1});\n\n  useEffect(() =>{\n    fetch(url+`tasklist/`).then(response=>response.json())\n              .then(function(lists) {\n                setTaskLists(lists)\n                setList(lists[0])\n              })\n              \n  }\n  ,[])\n\n  return (\n    <div id=\"tasks\">\n      <div className=\"todoListSidebar\">\n        <Dashboard lists={taskLists} selectedList={list} onSelect={setList} />\n      </div>\n      <div className=\"tasks-info\">\n        <Tasks list={list}/>\n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}