{"ast":null,"code":"import { ADD_TASK } from \"../dashboard/actions\";\nexport const SHOW_TASKS = 'SHOW_TASKS';\nexport const loadTasks = id => dispatch => {\n  fetch(`http://localhost:5000/api/tasklist/${id}/tasks`).then(res => res.json()).then(tasks => dispatch({\n    type: SHOW_TASKS,\n    payload: tasks\n  }));\n};\nexport const createTask = task => dispatch => {\n  fetch(`http://localhost:5000/api/tasktodo/`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({ ...task\n    })\n  }).then(() => dispatch({\n    type: ADD_TASK\n  }));\n};","map":{"version":3,"sources":["/home/intern/simmax/hooks/src/store/tasks/actions.js"],"names":["ADD_TASK","SHOW_TASKS","loadTasks","id","dispatch","fetch","then","res","json","tasks","type","payload","createTask","task","method","headers","body","JSON","stringify"],"mappings":"AAAA,SAASA,QAAT,QAAyB,sBAAzB;AAEA,OAAO,MAAMC,UAAU,GAAG,YAAnB;AAEP,OAAO,MAAMC,SAAS,GAAIC,EAAD,IAAOC,QAAQ,IAAG;AACvCC,EAAAA,KAAK,CAAE,sCAAqCF,EAAG,QAA1C,CAAL,CACCG,IADD,CACMC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EADX,EAECF,IAFD,CAEMG,KAAK,IAAEL,QAAQ,CAAC;AAClBM,IAAAA,IAAI,EAACT,UADa;AAElBU,IAAAA,OAAO,EAACF;AAFU,GAAD,CAFrB;AAMH,CAPM;AAQP,OAAO,MAAMG,UAAU,GAAIC,IAAD,IAAST,QAAQ,IAAG;AACtCC,EAAAA,KAAK,CAAE,qCAAF,EAAwC;AAC3CS,IAAAA,MAAM,EAAE,MADmC;AAE3CC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFkC;AAM3CC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,EAAE,GAAGL;AAAL,KAAf;AANqC,GAAxC,CAAL,CAQCP,IARD,CAQM,MAAKF,QAAQ,CAAC;AACjBM,IAAAA,IAAI,EAACV;AADY,GAAD,CARnB;AAWI,CAZL","sourcesContent":["import { ADD_TASK } from \"../dashboard/actions\"\n\nexport const SHOW_TASKS = 'SHOW_TASKS'\n\nexport const loadTasks = (id) =>dispatch =>{\n    fetch(`http://localhost:5000/api/tasklist/${id}/tasks`)\n    .then(res=>res.json())\n    .then(tasks=>dispatch({\n        type:SHOW_TASKS,\n        payload:tasks\n    }))\n}\nexport const createTask = (task) =>dispatch =>{\n        fetch(`http://localhost:5000/api/tasktodo/`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n    \n          body: JSON.stringify({ ...task }),\n        })\n        .then(() =>dispatch({\n           type:ADD_TASK,\n            \n        }))}\n"]},"metadata":{},"sourceType":"module"}