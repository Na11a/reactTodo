{"ast":null,"code":"var _jsxFileName = \"/home/intern/simmax/hooks/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Tasks from \"./Tasks\";\nimport { useEffect } from \"react\";\nimport Dashboard from \"./Dashboard\";\nimport { Route } from \"react-router\";\nimport TodayTasks from \"./TodayTasks\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = \"http://localhost:5000/api/\";\n\nfunction App() {\n  _s();\n\n  const [taskLists, setTaskLists] = useState([]);\n  const [list, setSelectedList] = useState({\n    id: 1\n  });\n  useEffect(() => {\n    fetch(url + `tasklist/`).then(response => response.json()).then(function (lists) {\n      setTaskLists(lists);\n      setSelectedList(lists[0]);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"tasks\",\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todoListSidebar\",\n        children: /*#__PURE__*/_jsxDEV(Dashboard, {\n          lists: taskLists,\n          selectedList: setSelectedList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/todo-list/:id\",\n        children: /*#__PURE__*/_jsxDEV(Tasks, {\n          list: list\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/today\",\n        children: /*#__PURE__*/_jsxDEV(TodayTasks, {\n          lists: lists\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"THaOPTXjQq6gz+SOSuQ6bpPQjaQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/intern/simmax/hooks/src/App.js"],"names":["React","useState","Tasks","useEffect","Dashboard","Route","TodayTasks","BrowserRouter","url","App","taskLists","setTaskLists","list","setSelectedList","id","fetch","then","response","json","lists"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,aAAT,QAA8B,kBAA9B;;AACA,MAAMC,GAAG,GAAG,4BAAZ;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACW,IAAD,EAAMC,eAAN,IAAyBZ,QAAQ,CAAC;AAACa,IAAAA,EAAE,EAAC;AAAJ,GAAD,CAAvC;AAGAX,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,KAAK,CAACP,GAAG,GAAI,WAAR,CAAL,CACGQ,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAEQ,UAAUG,KAAV,EAAiB;AACrBR,MAAAA,YAAY,CAACQ,KAAD,CAAZ;AACAN,MAAAA,eAAe,CAACM,KAAK,CAAC,CAAD,CAAN,CAAf;AACD,KALH;AAMD,GAPQ,EAON,EAPM,CAAT;AAQA,sBAEI;AAAK,IAAA,EAAE,EAAC,OAAR;AAAA,2BACE,QAAC,aAAD;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,+BACE,QAAC,SAAD;AAAW,UAAA,KAAK,EAAET,SAAlB;AAA6B,UAAA,YAAY,EAAEG;AAA3C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAKI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAE,gBAAb;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAED;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALJ,eAQI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,KAAK,EAAEO;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UAFJ;AAkBD;;GA/BQV,G;;KAAAA,G;AAiCT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Tasks from \"./Tasks\";\nimport { useEffect } from \"react\";\nimport Dashboard from \"./Dashboard\";\nimport { Route,} from \"react-router\";\nimport TodayTasks from \"./TodayTasks\";\nimport { BrowserRouter } from \"react-router-dom\";\nconst url = \"http://localhost:5000/api/\";\nfunction App() {\n  const [taskLists, setTaskLists] = useState([]);\n  const [list,setSelectedList] = useState({id:1})\n\n\n  useEffect(() => {\n    fetch(url + `tasklist/`)\n      .then((response) => response.json())\n      .then(function (lists) {\n        setTaskLists(lists);\n        setSelectedList(lists[0])\n      });\n  }, []);\n  return (\n\n      <div id=\"tasks\">\n        <BrowserRouter>\n          <div className=\"todoListSidebar\">\n            <Dashboard lists={taskLists} selectedList={setSelectedList}/>\n          </div>\n       \n            <Route path =\"/todo-list/:id\" >\n              <Tasks list={list} />\n            </Route>\n            <Route path=\"/today\">\n              <TodayTasks lists={lists}/>\n            </Route>\n         \n        </BrowserRouter>\n      </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}