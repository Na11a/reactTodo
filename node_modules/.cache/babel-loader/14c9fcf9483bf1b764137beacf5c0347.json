{"ast":null,"code":"var _jsxFileName = \"/home/intern/simmax/hooks/src/Tasks.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Task from './Task';\nimport './styles/Tasks.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = 'http://localhost:5000/api/';\nexport default function Tasks({\n  list\n}) {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n\n  const removeTask = t => {\n    fetch(url + `tasktodo/${t.id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(t)\n    }).then(setTasks(tasks.filter(task => t.id !== task.id)));\n  };\n\n  const updateDone = t => {\n    fetch(url + `tasktodo/${t.id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(t)\n    }).then(response => response.json()).then(() => setTasks([...tasks]));\n  };\n\n  useEffect(() => {\n    fetch(url + `tasklist/${list.id}/tasks`).then(response => response.json()).then(ts => setTasks(ts));\n  }, [list]);\n\n  const addTask = task => {\n    task = { ...task,\n      taskListId: list.id\n    };\n    fetch(url + `tasktodo/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    }).then(response => response.json()).then(task => setTasks([...tasks, task]));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"task-list\",\n    children: [tasks.map((t, i) => /*#__PURE__*/_jsxDEV(Task, {\n      task: t,\n      getRemoveTask: removeTask,\n      updateDone: updateDone\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 33\n    }, this)), /*#__PURE__*/_jsxDEV(NewTaskForm, {\n      onSubmit: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Tasks, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n\n_c = Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["/home/intern/simmax/hooks/src/Tasks.js"],"names":["React","Task","useState","url","Tasks","list","tasks","setTasks","removeTask","t","fetch","id","method","headers","body","JSON","stringify","then","filter","task","updateDone","response","json","useEffect","ts","addTask","taskListId","map","i"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,oBAAP;AACA,SAAQC,QAAR,QAAuB,OAAvB;;AAEA,MAAMC,GAAG,GAAG,4BAAZ;AAEA,eAAe,SAASC,KAAT,CAAe;AAACC,EAAAA;AAAD,CAAf,EAAuB;AAAA;;AAClC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMM,UAAU,GAAIC,CAAD,IAAM;AACrBC,IAAAA,KAAK,CAACP,GAAG,GAAE,YAAWM,CAAC,CAACE,EAAG,EAAtB,EACT;AAAEC,MAAAA,MAAM,EAAC,QAAT;AACEC,MAAAA,OAAO,EAAC;AACF,wBAAe;AADb,OADV;AAIEC,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeP,CAAf;AAJP,KADS,CAAL,CAMDQ,IANC,CAMIV,QAAQ,CAACD,KAAK,CAACY,MAAN,CAAaC,IAAI,IAAEV,CAAC,CAACE,EAAF,KAAQQ,IAAI,CAACR,EAAhC,CAAD,CANZ;AAOH,GARD;;AAUA,QAAMS,UAAU,GAAGX,CAAD,IAAM;AACpBC,IAAAA,KAAK,CAACP,GAAG,GAAE,YAAWM,CAAC,CAACE,EAAG,EAAtB,EACP;AAAEC,MAAAA,MAAM,EAAC,OAAT;AACEC,MAAAA,OAAO,EAAC;AACF,wBAAe;AADb,OADV;AAIEC,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeP,CAAf;AAJP,KADO,CAAL,CAMCQ,IAND,CAMMI,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EANhB,EAMiCL,IANjC,CAMsC,MAAKV,QAAQ,CAAC,CAAC,GAAGD,KAAJ,CAAD,CANnD;AAOD,GARH;;AAUEiB,EAAAA,SAAS,CAAC,MAAM;AACdb,IAAAA,KAAK,CAACP,GAAG,GAAE,YAAWE,IAAI,CAACM,EAAG,QAAzB,CAAL,CACAM,IADA,CACKI,QAAQ,IAAGA,QAAQ,CAACC,IAAT,EADhB,EAEAL,IAFA,CAEKO,EAAE,IAAEjB,QAAQ,CAACiB,EAAD,CAFjB;AAGD,GAJQ,EAIN,CAACnB,IAAD,CAJM,CAAT;;AAMJ,QAAMoB,OAAO,GAAIN,IAAD,IAAU;AACxBA,IAAAA,IAAI,GAAG,EAAC,GAAGA,IAAJ;AAASO,MAAAA,UAAU,EAACrB,IAAI,CAACM;AAAzB,KAAP;AACFD,IAAAA,KAAK,CAACP,GAAG,GAAE,WAAN,EACL;AAAES,MAAAA,MAAM,EAAC,MAAT;AACEC,MAAAA,OAAO,EAAC;AACF,wBAAe;AADb,OADV;AAIEC,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeG,IAAf;AAJP,KADK,CAAL,CAMGF,IANH,CAMQI,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EANlB,EAMmCL,IANnC,CAMyCE,IAAD,IAASZ,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWa,IAAX,CAAD,CANzD;AAOD,GATC;;AAWE,sBACI;AAAK,IAAA,EAAE,EAAC,WAAR;AAAA,eACKb,KAAK,CAACqB,GAAN,CAAU,CAAClB,CAAD,EAAGmB,CAAH,kBAAS,QAAC,IAAD;AAAc,MAAA,IAAI,EAAGnB,CAArB;AAAwB,MAAA,aAAa,EAAED,UAAvC;AAAmD,MAAA,UAAU,EAAEY;AAA/D,OAAWQ,CAAX;AAAA;AAAA;AAAA;AAAA,YAAnB,CADL,eAEI,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAEH;AAAvB;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GA9CuBrB,K;;KAAAA,K","sourcesContent":["import React from 'react';\nimport Task from './Task';\nimport './styles/Tasks.css';\nimport {useState} from 'react';\n\nconst url = 'http://localhost:5000/api/'\n\nexport default function Tasks({list}) {\n    const [tasks, setTasks] = useState([]);\n\n    const removeTask = (t) =>{\n        fetch(url+`tasktodo/${t.id}`,\n    { method:'DELETE',\n      headers:{\n            'Content-Type':'application/json'},\n  \n      body:JSON.stringify(t)\n    }).then(setTasks(tasks.filter(task=>t.id !==task.id)))\n    }\n\n    const updateDone =(t)=> {\n        fetch(url+`tasktodo/${t.id}`,\n      { method:'PATCH',\n        headers:{\n              'Content-Type':'application/json'},\n    \n        body:JSON.stringify(t)\n      }).then(response=>response.json()).then(()=> setTasks([...tasks]))\n      }\n\n      useEffect(() => {\n        fetch(url+`tasklist/${list.id}/tasks`).\n        then(response =>response.json()).\n        then(ts=>setTasks(ts))\n      }, [list])\n\n  const addTask = (task) => {\n    task = {...task,taskListId:list.id}\n  fetch(url+`tasktodo/`,\n  { method:'POST',\n    headers:{\n          'Content-Type':'application/json'},\n\n    body:JSON.stringify(task)\n  }).then(response=>response.json()).then((task)=> setTasks([...tasks, task]))\n}\n\n    return (\n        <div id=\"task-list\">\n            {tasks.map((t,i) => <Task key={i} task ={t} getRemoveTask={removeTask} updateDone={updateDone}/>)} \n            <NewTaskForm onSubmit={addTask} /> \n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}