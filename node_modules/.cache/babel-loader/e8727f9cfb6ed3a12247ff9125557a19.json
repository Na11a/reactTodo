{"ast":null,"code":"var _jsxFileName = \"/home/intern/simmax/hooks/src/TodayTasks.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Task from \"./Task\";\nimport { useState, useEffect } from \"react\";\nimport './styles/Tasks.css';\nimport NewTaskForm from './NewTaskForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = \"http://localhost:5000/api/\";\nexport default function TodayTasks(props) {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  const [listsDTO, setListDTO] = useState([]);\n  useEffect(() => {\n    fetch(url + 'tasktodo/colections/today').then(response => response.json()).then(task => setTasks([]));\n  }, []);\n\n  const removeTask = t => {\n    fetch(url + `tasktodo/${t.id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(t)\n    }).then(setTasks(tasks.filter(task => t.id !== task.id)));\n  };\n\n  const updateDone = t => {\n    fetch(url + `tasktodo/${t.id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(t)\n    }).then(response => response.json()).then(() => setTasks([...tasks]));\n  };\n\n  const addTask = task => {\n    fetch(url + `tasktodo/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ ...task\n      })\n    }).then(response => response.json()).then(task => setTasks([...tasks, task]));\n  };\n\n  useEffect(() => {\n    fetch(url + \"tasktodo/dashboard\").then(response => response.json()).then(setListDTO);\n  }, []);\n  console.log(tasks.map(t => t.taskListId));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"task-list\",\n    children: [tasks.map((t, i) => /*#__PURE__*/_jsxDEV(Task, {\n      task: t,\n      getRemoveTask: removeTask,\n      updateDone: updateDone\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 33\n    }, this)), /*#__PURE__*/_jsxDEV(NewTaskForm, {\n      onSubmit: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodayTasks, \"CcaCH+cB1Lt7oyPMXqdCf4Bmv3A=\");\n\n_c = TodayTasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodayTasks\");","map":{"version":3,"sources":["/home/intern/simmax/hooks/src/TodayTasks.js"],"names":["React","Task","useState","useEffect","NewTaskForm","url","TodayTasks","props","tasks","setTasks","listsDTO","setListDTO","fetch","then","response","json","task","removeTask","t","id","method","headers","body","JSON","stringify","filter","updateDone","addTask","console","log","map","taskListId","i"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Task from \"./Task\";\nimport { useState, useEffect } from \"react\";\nimport './styles/Tasks.css';\nimport NewTaskForm from './NewTaskForm'\nconst url = \"http://localhost:5000/api/\";\n\n\nexport default function TodayTasks(props) {\n  const [tasks, setTasks] = useState([]);\n  const [listsDTO, setListDTO] = useState([]);\n\n  useEffect(() => {\n    fetch(url+'tasktodo/colections/today')\n      .then((response) => response.json())\n      .then(task => setTasks([]));\n  },[]);\n\n  const removeTask = (t) =>{\n    fetch(url+`tasktodo/${t.id}`,\n{ method:'DELETE',\n  headers:{\n        'Content-Type':'application/json'},\n\n  body:JSON.stringify(t)\n}).then(setTasks(tasks.filter(task=>t.id !==task.id)))\n}\n\nconst updateDone =(t)=> {\n    fetch(url+`tasktodo/${t.id}`,\n  { method:'PATCH',\n    headers:{\n          'Content-Type':'application/json'},\n\n    body:JSON.stringify(t)\n  }).then(response=>response.json()).then(()=> setTasks([...tasks]))\n  }\n  const addTask = (task) => {\n  fetch(url+`tasktodo/`,\n  { method:'POST',\n    headers:{\n          'Content-Type':'application/json'},\n\n    body:JSON.stringify({...task})\n  }).then(response=>response.json()).then((task)=> setTasks([...tasks, task]))\n};\n\nuseEffect(() => {\n    fetch(url + \"tasktodo/dashboard\").\n    then((response) => response.json()).\n    then(setListDTO)\n    },[]);\n  console.log(tasks.map(t=>t.taskListId))  \n\n  return (\n    <div id=\"task-list\">\n            {tasks.map((t,i) => <Task key={i} task ={t}  getRemoveTask={removeTask} updateDone={updateDone}/>)} \n        <NewTaskForm onSubmit={addTask} /> \n\n        </div>\n\n  );\n}\n"]},"metadata":{},"sourceType":"module"}