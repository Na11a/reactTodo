{"ast":null,"code":"var _jsxFileName = \"/home/intern/simmax/hooks/src/TodayTasks.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Task from \"./Task\";\nimport { useState, useEffect } from \"react\";\nimport './styles/Tasks.css';\nimport NewTaskForm from './';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TodayTasks(props) {\n  _s();\n\n  const url = \"http://localhost:5000/api/tasktodo/colections/today\";\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    fetch(url).then(response => response.json()).then(ts => setTasks(ts));\n  });\n\n  const removeTask = t => {\n    fetch(url + `tasktodo/${t.id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(t)\n    }).then(setTasks(tasks.filter(task => t.id !== task.id)));\n  };\n\n  const updateDone = t => {\n    fetch(url + `tasktodo/${t.id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(t)\n    }).then(response => response.json()).then(() => setTasks([...tasks]));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"task-list\",\n    children: [tasks.map((t, i) => /*#__PURE__*/_jsxDEV(Task, {\n      task: t,\n      getRemoveTask: removeTask,\n      updateDone: updateDone\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 33\n    }, this)), /*#__PURE__*/_jsxDEV(NewTaskForm, {\n      onSubmit: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodayTasks, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n\n_c = TodayTasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodayTasks\");","map":{"version":3,"sources":["/home/intern/simmax/hooks/src/TodayTasks.js"],"names":["React","Task","useState","useEffect","NewTaskForm","TodayTasks","props","url","tasks","setTasks","fetch","then","response","json","ts","removeTask","t","id","method","headers","body","JSON","stringify","filter","task","updateDone","map","i","addTask"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,oBAAP;AACA,OAAOC,WAAP,MAAwB,IAAxB;;AACA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACxC,QAAMC,GAAG,GAAG,qDAAZ;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,KAAK,CAACH,GAAD,CAAL,CACGI,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,EAAD,IAAQL,QAAQ,CAACK,EAAD,CAFxB;AAGD,GAJQ,CAAT;;AAKA,QAAMC,UAAU,GAAIC,CAAD,IAAM;AACvBN,IAAAA,KAAK,CAACH,GAAG,GAAE,YAAWS,CAAC,CAACC,EAAG,EAAtB,EACT;AAAEC,MAAAA,MAAM,EAAC,QAAT;AACEC,MAAAA,OAAO,EAAC;AACF,wBAAe;AADb,OADV;AAIEC,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeN,CAAf;AAJP,KADS,CAAL,CAMDL,IANC,CAMIF,QAAQ,CAACD,KAAK,CAACe,MAAN,CAAaC,IAAI,IAAER,CAAC,CAACC,EAAF,KAAQO,IAAI,CAACP,EAAhC,CAAD,CANZ;AAOH,GARC;;AAUF,QAAMQ,UAAU,GAAGT,CAAD,IAAM;AACpBN,IAAAA,KAAK,CAACH,GAAG,GAAE,YAAWS,CAAC,CAACC,EAAG,EAAtB,EACP;AAAEC,MAAAA,MAAM,EAAC,OAAT;AACEC,MAAAA,OAAO,EAAC;AACF,wBAAe;AADb,OADV;AAIEC,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeN,CAAf;AAJP,KADO,CAAL,CAMCL,IAND,CAMMC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EANhB,EAMiCF,IANjC,CAMsC,MAAKF,QAAQ,CAAC,CAAC,GAAGD,KAAJ,CAAD,CANnD;AAOD,GARH;;AAUE,sBACE;AAAK,IAAA,EAAE,EAAC,WAAR;AAAA,eACSA,KAAK,CAACkB,GAAN,CAAU,CAACV,CAAD,EAAGW,CAAH,kBAAS,QAAC,IAAD;AAAc,MAAA,IAAI,EAAGX,CAArB;AAAwB,MAAA,aAAa,EAAED,UAAvC;AAAmD,MAAA,UAAU,EAAEU;AAA/D,OAAWE,CAAX;AAAA;AAAA;AAAA;AAAA,YAAnB,CADT,eAEI,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAEC;AAAvB;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GApCuBvB,U;;KAAAA,U","sourcesContent":["import React from \"react\";\nimport Task from \"./Task\";\nimport { useState, useEffect } from \"react\";\nimport './styles/Tasks.css';\nimport NewTaskForm from './'\nexport default function TodayTasks(props) {\n  const url = \"http://localhost:5000/api/tasktodo/colections/today\";\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    fetch(url)\n      .then((response) => response.json())\n      .then((ts) => setTasks(ts));\n  });\n  const removeTask = (t) =>{\n    fetch(url+`tasktodo/${t.id}`,\n{ method:'DELETE',\n  headers:{\n        'Content-Type':'application/json'},\n\n  body:JSON.stringify(t)\n}).then(setTasks(tasks.filter(task=>t.id !==task.id)))\n}\n\nconst updateDone =(t)=> {\n    fetch(url+`tasktodo/${t.id}`,\n  { method:'PATCH',\n    headers:{\n          'Content-Type':'application/json'},\n\n    body:JSON.stringify(t)\n  }).then(response=>response.json()).then(()=> setTasks([...tasks]))\n  }\n\n  return (\n    <div id=\"task-list\">\n            {tasks.map((t,i) => <Task key={i} task ={t} getRemoveTask={removeTask} updateDone={updateDone}/>)} \n        <NewTaskForm onSubmit={addTask} /> \n\n        </div>\n\n  );\n}\n"]},"metadata":{},"sourceType":"module"}