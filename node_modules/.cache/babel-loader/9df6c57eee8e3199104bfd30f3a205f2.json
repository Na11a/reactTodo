{"ast":null,"code":"var _jsxFileName = \"/home/intern/simmax/hooks/src/NotDone.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport Task from './Task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NotDone() {\n  _s();\n\n  let [tasks, setTasks] = useState([]);\n  useEffect(() => fetch('http://localhost:5000/api/tasktodo').then(response => response.json()).then(setTasks), []);\n  console.log(tasks.filter(t => t.done === false && new Date(t.dueDate).toLocaleDateString() == new Date().toLocaleDateString()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: tasks.map((t, i) => /*#__PURE__*/_jsxDEV(Task, {\n      task: t,\n      getRemoveTask: removeTask,\n      updateDone: updateDone,\n      lists: props.lists,\n      today: true\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NotDone, \"Qtrz6vakdAi0z9WiU2BC9GkpZpA=\");\n\n_c = NotDone;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotDone\");","map":{"version":3,"sources":["/home/intern/simmax/hooks/src/NotDone.js"],"names":["React","useState","useEffect","Task","NotDone","tasks","setTasks","fetch","then","response","json","console","log","filter","t","done","Date","dueDate","toLocaleDateString","map","i","removeTask","updateDone","props","lists"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAC9B,MAAI,CAACC,KAAD,EAAOC,QAAP,IAAmBL,QAAQ,CAAC,EAAD,CAA/B;AACAC,EAAAA,SAAS,CAAC,MAAIK,KAAK,CAAC,oCAAD,CAAL,CACdC,IADc,CACTC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EADD,EAEdF,IAFc,CAETF,QAFS,CAAL,EAGR,EAHQ,CAAT;AAIAK,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACQ,MAAN,CAAaC,CAAC,IAAGA,CAAC,CAACC,IAAF,KAAS,KAAV,IAAqB,IAAIC,IAAJ,CAASF,CAAC,CAACG,OAAX,EAAoBC,kBAApB,MAA4C,IAAIF,IAAJ,GAAWE,kBAAX,EAAjF,CAAZ;AACA,sBACI;AAAA,cACIb,KAAK,CAACc,GAAN,CAAU,CAACL,CAAD,EAAIM,CAAJ,kBACd,QAAC,IAAD;AAEE,MAAA,IAAI,EAAEN,CAFR;AAGE,MAAA,aAAa,EAAEO,UAHjB;AAIE,MAAA,UAAU,EAAEC,UAJd;AAKE,MAAA,KAAK,EAAEC,KAAK,CAACC,KALf;AAME,MAAA,KAAK,EAAE;AANT,OACOJ,CADP;AAAA;AAAA;AAAA;AAAA,YADI;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GArBuBhB,O;;KAAAA,O","sourcesContent":["import React from 'react';\nimport {useState} from 'react';\nimport { useEffect } from 'react';\nimport Task from './Task';\n\nexport default function NotDone() {\n    let [tasks,setTasks] = useState([]);\n    useEffect(()=>fetch('http://localhost:5000/api/tasktodo').\n    then(response=>response.json()).\n    then(setTasks)\n    ,[])\n    console.log(tasks.filter(t=>(t.done===false) && (new Date(t.dueDate).toLocaleDateString() == new Date().toLocaleDateString())))\n    return (\n        <div>\n           {tasks.map((t, i) => (\n        <Task\n          key={i}\n          task={t}\n          getRemoveTask={removeTask}\n          updateDone={updateDone}\n          lists={props.lists}\n          today={true}\n        />\n      ))}\n            </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}