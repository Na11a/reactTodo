{"ast":null,"code":"var _jsxFileName = \"/home/intern/simmax/hooks/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Tasks from \"./Tasks\";\nimport { useEffect } from \"react\";\nimport Dashboard from \"./Dashboard\";\nimport { Route, Router, Switch } from \"react-router\";\nimport TodayTasks from \"./TodayTasks\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = \"http://localhost:5000/api/\";\n\nfunction App() {\n  _s();\n\n  const [taskLists, setTaskLists] = useState([]);\n  const [list, setSelectedList] = useState([]);\n  useEffect(() => {\n    fetch(url + `tasklist/`).then(response => response.json()).then(function (lists) {\n      setTaskLists(lists);\n      setSelectedList(lists[0]);\n      console.log(list);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"tasks\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoListSidebar\",\n      children: /*#__PURE__*/_jsxDEV(Dashboard, {\n        lists: taskLists,\n        selectedList: setSelectedList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Tasks, {\n        list: list\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"MwohsRCl1yHHybZitErVbVCh/xE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/intern/simmax/hooks/src/App.js"],"names":["React","useState","Tasks","useEffect","Dashboard","Route","Router","Switch","TodayTasks","BrowserRouter","url","App","taskLists","setTaskLists","list","setSelectedList","fetch","then","response","json","lists","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,MAAxB,QAAsC,cAAtC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,aAAT,QAA8B,kBAA9B;;AACA,MAAMC,GAAG,GAAG,4BAAZ;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACa,IAAD,EAAMC,eAAN,IAAyBd,QAAQ,CAAC,EAAD,CAAvC;AAGAE,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,KAAK,CAACN,GAAG,GAAI,WAAR,CAAL,CACGO,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAEQ,UAAUG,KAAV,EAAiB;AACrBP,MAAAA,YAAY,CAACO,KAAD,CAAZ;AACAL,MAAAA,eAAe,CAACK,KAAK,CAAC,CAAD,CAAN,CAAf;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AACD,KANH;AAOD,GARQ,EAQN,EARM,CAAT;AASA,sBAEI;AAAK,IAAA,EAAE,EAAC,OAAR;AAAA,4BAEI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEF,SAAlB;AAA6B,QAAA,YAAY,EAAEG;AAA3C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFJ,eAKI;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAED;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAaD;;GA3BQH,G;;KAAAA,G;AA6BT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Tasks from \"./Tasks\";\nimport { useEffect } from \"react\";\nimport Dashboard from \"./Dashboard\";\nimport { Route, Router, Switch } from \"react-router\";\nimport TodayTasks from \"./TodayTasks\";\nimport { BrowserRouter } from \"react-router-dom\";\nconst url = \"http://localhost:5000/api/\";\nfunction App() {\n  const [taskLists, setTaskLists] = useState([]);\n  const [list,setSelectedList] = useState([])\n\n\n  useEffect(() => {\n    fetch(url + `tasklist/`)\n      .then((response) => response.json())\n      .then(function (lists) {\n        setTaskLists(lists);\n        setSelectedList(lists[0])\n        console.log(list)\n      });\n  }, []);\n  return (\n\n      <div id=\"tasks\">\n        \n          <div className=\"todoListSidebar\">\n            <Dashboard lists={taskLists} selectedList={setSelectedList}/>\n          </div>\n          <div>\n            <Tasks list={list}/>\n          </div>\n        \n      </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}