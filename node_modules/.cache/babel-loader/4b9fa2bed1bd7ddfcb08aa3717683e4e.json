{"ast":null,"code":"var _jsxFileName = \"/home/intern/simmax/hooks/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Tasks from \"./components/Tasks\";\nimport { useEffect } from \"react\";\nimport Dashboard from \"./components/Dashboard\";\nimport { Route } from \"react-router\";\nimport TodayTasks from \"./components/TodayTasks\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport NotDone from \"./components/NotDone\";\nimport { loadDashboard } from \"./store/dashboard/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { store } from './store/index';\nimport { Provider } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = \"http://localhost:5000/api/\";\n\nfunction App() {\n  _s();\n\n  const [taskLists, setTaskLists] = useState([]);\n  const [list, setSelectedList] = useState();\n  useEffect(() => {\n    fetch(url + `tasklist/`).then(response => response.json()).then(function (lists) {\n      setTaskLists(lists);\n      setSelectedList(lists[0]);\n    });\n  }, []);\n  const dispatch = useDispatch();\n  return (\n    /*#__PURE__*/\n    // <Provider store = {store}>\n    _jsxDEV(\"div\", {\n      id: \"tasks\",\n      children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todoListSidebar\",\n          children: /*#__PURE__*/_jsxDEV(Dashboard, {\n            lists: taskLists,\n            selectedList: setSelectedList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/todo-list/:id\",\n          children: /*#__PURE__*/_jsxDEV(Tasks, {\n            list: list,\n            lists: taskLists\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/today\",\n          children: /*#__PURE__*/_jsxDEV(TodayTasks, {\n            lists: taskLists\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/not-done\",\n          children: /*#__PURE__*/_jsxDEV(NotDone, {\n            list: list,\n            lists: taskLists\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(App, \"lHnRB7PsiN7GvoCr3u4dVt0ovv4=\", false, function () {\n  return [useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/intern/simmax/hooks/src/App.js"],"names":["React","useState","Tasks","useEffect","Dashboard","Route","TodayTasks","BrowserRouter","NotDone","loadDashboard","useDispatch","useSelector","store","Provider","url","App","taskLists","setTaskLists","list","setSelectedList","fetch","then","response","json","lists","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAAQC,KAAR,QAAoB,eAApB;AACA,SAASC,QAAT,QAAyB,aAAzB;;AACA,MAAMC,GAAG,GAAG,4BAAZ;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACiB,IAAD,EAAOC,eAAP,IAA0BlB,QAAQ,EAAxC;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,KAAK,CAACN,GAAG,GAAI,WAAR,CAAL,CACGO,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAEQ,UAAUG,KAAV,EAAiB;AACrBP,MAAAA,YAAY,CAACO,KAAD,CAAZ;AACAL,MAAAA,eAAe,CAACK,KAAK,CAAC,CAAD,CAAN,CAAf;AACD,KALH;AAMD,GAPQ,EAON,EAPM,CAAT;AAQA,QAAMC,QAAQ,GAAGf,WAAW,EAA5B;AACA;AAAA;AACE;AACA;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA,6BAGE,QAAC,aAAD;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,iCACE,QAAC,SAAD;AAAW,YAAA,KAAK,EAAEM,SAAlB;AAA6B,YAAA,YAAY,EAAEG;AAA3C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAE,gBAAb;AAAA,iCACE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAED,IAAb;AAAmB,YAAA,KAAK,EAAEF;AAA1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBALF,eAQE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAA,iCACE,QAAC,UAAD;AAAY,YAAA,KAAK,EAAEA;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBARF,eAWE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,WAAZ;AAAA,iCACE,QAAC,OAAD;AAAS,YAAA,IAAI,EAAEE,IAAf;AAAqB,YAAA,KAAK,EAAEF;AAA5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA;AAFF;AAsBD;;GAnCQD,G;UAYUL,W;;;KAZVK,G;AAqCT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Tasks from \"./components/Tasks\";\nimport { useEffect } from \"react\";\nimport Dashboard from \"./components/Dashboard\";\nimport { Route } from \"react-router\";\nimport TodayTasks from \"./components/TodayTasks\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport NotDone from \"./components/NotDone\";\nimport { loadDashboard } from \"./store/dashboard/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {store} from './store/index';\nimport { Provider } from \"react-redux\";\nconst url = \"http://localhost:5000/api/\";\nfunction App() {\n  const [taskLists, setTaskLists] = useState([]);\n  const [list, setSelectedList] = useState();\n\n  useEffect(() => {\n    fetch(url + `tasklist/`)\n      .then((response) => response.json())\n      .then(function (lists) {\n        setTaskLists(lists);\n        setSelectedList(lists[0]);\n      });\n  }, []);\n  const dispatch = useDispatch();\n  return (\n    // <Provider store = {store}>\n    <div id=\"tasks\">\n      {/* {console.log(store.getState())} */}\n\n      <BrowserRouter>\n        <div className=\"todoListSidebar\">\n          <Dashboard lists={taskLists} selectedList={setSelectedList} />\n        </div>\n\n        <Route path={\"/todo-list/:id\"}>\n          <Tasks list={list} lists={taskLists} />\n        </Route>\n        <Route path=\"/today\">\n          <TodayTasks lists={taskLists} />\n        </Route>\n        <Route path=\"/not-done\">\n          <NotDone list={list} lists={taskLists} />\n        </Route>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}